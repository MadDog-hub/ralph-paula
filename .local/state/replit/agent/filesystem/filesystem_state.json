{"file_contents":{"VERCEL_DEPLOYMENT.md":{"content":"# Vercel Deployment Guide\n\n## Wedding Invitation Website - Vercel Ready\n\nYour wedding invitation website has been successfully converted for Vercel deployment!\n\n### ‚úÖ What's Been Done:\n\n1. **Removed Server Dependencies**\n   - Converted from full-stack Express app to static React site\n   - Removed API calls and server-side functionality\n   - Updated query client for static deployment\n\n2. **Added Vercel Configuration**\n   - Created `vercel.json` with proper build settings\n   - Added `.vercelignore` to exclude server files\n   - Configured Vite build for static output\n\n3. **Build Verification**\n   - Frontend builds successfully\n   - Static assets generated in `dist/public/`\n   - Background music and all components working\n\n### üìÅ Files Added/Modified:\n\n- `vercel.json` - Vercel deployment configuration\n- `.vercelignore` - Excludes server files from deployment  \n- `build-vercel.js` - Custom build script (if needed)\n- `client/src/lib/queryClient.ts` - Removed server API dependencies\n\n### üöÄ Deployment Steps:\n\n1. **Connect to Vercel:**\n   - Go to [vercel.com](https://vercel.com)\n   - Connect your GitHub/repository\n   - Import this project\n\n2. **Configure Build Settings:**\n   - Build Command: `vite build`\n   - Output Directory: `dist/public`\n   - Install Command: `npm install`\n\n3. **Deploy:**\n   - Vercel will automatically use the `vercel.json` configuration\n   - Your wedding site will be live on a `.vercel.app` domain\n\n### üéµ Features Preserved:\n\n- ‚úÖ Background music (Cloudinary hosted)\n- ‚úÖ Image slideshow with clean design\n- ‚úÖ All wedding sections (story, venue, RSVP, etc.)\n- ‚úÖ Responsive design and animations\n- ‚úÖ Google Fonts and styling\n\n### üí° Important Notes:\n\n- This is now a **static site** - no server-side functionality\n- All images and music are hosted on Cloudinary (external)\n- Perfect for wedding invitations (no dynamic data needed)\n- Much faster loading and better SEO on Vercel\n\nYour wedding invitation website is ready for Vercel deployment! üéâ","size_bytes":2003},"build-vercel.js":{"content":"#!/usr/bin/env node\n\n// Simple build script for Vercel deployment\n// This ensures the frontend builds correctly without server dependencies\n\nimport { execSync } from 'child_process';\nimport { fileURLToPath } from 'url';\nimport { dirname } from 'path';\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\n\nconsole.log('Building frontend for Vercel deployment...');\n\ntry {\n  // Build the frontend only\n  execSync('vite build', { \n    stdio: 'inherit', \n    cwd: __dirname,\n    env: { \n      ...process.env, \n      NODE_ENV: 'production' \n    }\n  });\n  \n  console.log('‚úÖ Frontend build completed successfully!');\n} catch (error) {\n  console.error('‚ùå Build failed:', error.message);\n  process.exit(1);\n}","size_bytes":742},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Wedding Invitation Website\n\n## Project Overview\nThis is a wedding invitation website for Andrei & Sam's wedding on September 7, 2025. The project is a full-stack JavaScript application showcasing a beautiful wedding invitation with multiple sections including hero, slideshow, invitation details, countdown, story, venue information, RSVP, and more.\n\n## Project Architecture\n- **Frontend**: React with TypeScript, Vite for bundling, Tailwind CSS + shadcn/ui for styling\n- **Backend**: Express.js server with TypeScript\n- **Routing**: Wouter (React routing library)\n- **State Management**: TanStack Query for server state\n- **Database**: In-memory storage (MemStorage) - can be upgraded to PostgreSQL if needed\n- **Styling**: Tailwind CSS with custom wedding theme\n- **Audio**: Background music integration with user interaction triggers\n\n## Key Features\n- Responsive wedding invitation website\n- Interactive hero section with invitation opening animation\n- Background music that starts on user interaction\n- Multiple content sections (story, venue, RSVP, FAQ, etc.)\n- Modern UI components using shadcn/ui\n- Dark/light theme support\n- SEO optimized\n\n## Migration Status\nSuccessfully migrated from Lovable to Replit environment:\n- [x] Install required dependencies (react-router-dom, sonner, nanoid)\n- [x] Convert routing from react-router-dom to wouter \n- [x] Set up proper QueryClient configuration\n- [x] Fixed background music functionality with proper autoplay handling\n- [x] Enhanced typography with elegant Google Fonts (Playfair Display, Cormorant Garamond, Inter)\n- [x] Updated HeroSection with improved font styling and data-testid attributes\n- [x] Removed visual artifacts from slideshow section\n- [x] Improved InvitationSection layout and styling\n- [x] Complete migration verification\n\n## Development Notes\n- Uses Replit's full-stack template with Express backend and React frontend\n- Server runs on port 5000 and serves both API and frontend\n- Vite handles development bundling and HMR\n- Audio files are hosted on Cloudinary CDN\n\n## User Preferences\n- Background music should play automatically when clicking \"Open Invitation\" with NO control buttons\n- Clean, sophisticated design without visual artifacts or decorative elements that interfere with images\n- Elegant wedding-appropriate typography using Google Fonts\n\n## Recent Changes\n- **2024-01-09**: Started migration from Lovable to Replit\n- **2024-01-09**: Updated routing system from react-router-dom to wouter\n- **2024-01-09**: Created QueryClient setup with proper API request handling\n- **2024-01-09**: Fixed background music with improved autoplay handling and fallback interactions\n- **2024-01-09**: Enhanced typography with Google Fonts (Playfair Display, Cormorant Garamond, Inter)\n- **2024-01-09**: Updated HeroSection with elegant font styling and improved spacing\n- **2024-01-09**: Added data-testid attributes for accessibility and testing\n- **2024-01-09**: Removed visual artifacts from slideshow section\n- **2024-01-09**: Improved InvitationSection layout and styling\n- **2024-01-09**: Enhanced StorySection with designer polaroid frames and elegant text layout\n- **2024-01-09**: Fixed mobile shadows and glass effects across all components\n- **2024-01-09**: Fixed deployment issues for Cloud Run production environment:\n  - Updated server.listen() to use PORT environment variable for production deployments\n  - Added comprehensive error handling for server startup process\n  - Implemented graceful shutdown handlers for SIGTERM and SIGINT signals\n  - Verified build output structure with dist/index.js and static assets in dist/public\n- **2024-01-09**: Converted website for Vercel deployment:\n  - Removed server dependencies and converted to static React site\n  - Created vercel.json configuration and .vercelignore file\n  - Updated queryClient to work without API endpoints\n  - Generated static build in dist/public/ with all assets\n  - Created comprehensive deployment guide (VERCEL_DEPLOYMENT.md)\n- **2025-01-16**: Complete content overhaul for Ej & Krizza's wedding:\n  - Updated all components with new couple names \"Ej & Krizza\"\n  - Changed wedding date to September 7, 2025 at 1:00 PM\n  - Updated venues to Sacred Heart of Jesus (ceremony) and Summit Galleria Cebu (reception)\n  - Migrated all images from Google Drive to Cloudinary for reliable hosting\n  - Updated hero section background with new couple photo\n  - Replaced slideshow with 18 new engagement photos\n  - Updated story section with 9 new photos and completely new story content\n  - Changed \"DY Missing Piece\" to \"The Vow\" in story section\n  - Updated wedding timeline with new schedule (1:00 PM arrival, 1:30 PM ceremony, etc.)\n  - Added \"unplugged ceremony\" messaging throughout venue section\n  - Updated dress code to formal attire requirements with no cocktail dresses or cream/white colors\n  - Changed gift message to new wording about monetary gifts for their future\n  - Completely rewrote FAQ section with new questions about unplugged ceremony, arrival times, plus-one policy\n  - Updated contact information to 0926 002 9824 and paranelmer@gmail.com\n  - Changed wedding hashtag to #SeaYouAtTheAisle\n  - Updated countdown timer to use correct September 7, 2025 date\n  - Updated HTML title and meta description for new couple\n  - Updated all venue details with new Cebu locations and Google Maps links\n  - Added comprehensive unplugged ceremony note to venue section\n  - Updated RSVP deadline to August 20, 2025\n  - Transformed website to dark mode with old money aesthetic:\n    - Updated CSS variables to use #171610 (dark background), #333333 (medium dark), #ffffff (white text)\n    - Converted all hardcoded color references to match dark mode theme\n    - Updated all components with new color scheme while maintaining existing layout\n    - Enhanced buttons and interactive elements with elegant hover effects\n    - Maintained sophisticated wedding aesthetic with dark luxury styling\n- **2025-01-16**: Successfully migrated from Replit Agent to Replit environment:\n  - Fixed server port configuration from 5173 to 5000 for Replit compatibility\n  - All required packages already installed and working\n  - Verified website functionality with working background music and user interactions\n  - Added comprehensive EntourageSection with complete wedding party details including:\n    - Parents (Elmer & Genalyn Paran, Jaymar & Merlyn Manlangit)\n    - Principal sponsors (14 couples)\n    - Secondary sponsors (Candle, Veil, Cord)\n    - Best Man (Brandon Lemoshiro) and Maid of Honor (Daisy Jane Macairan)\n    - Groomsmen and Bridesmaids (6 each)\n    - Flower Men and Flower Ladies\n    - Ring Bearer, Coin Bearer, Bible Bearer\n    - Officiating Priest (Rev. Fr. Wilson T. Lagare)\n  - Positioned EntourageSection before RSVP section as requested\n  - Maintained dark mode aesthetic with elegant card layouts\n  - Optimized EntourageSection for mobile responsiveness with:\n    - Responsive grid layouts (grid-cols-1 sm:grid-cols-2 md:grid-cols-2)\n    - Adaptive text sizes (text-base md:text-lg, text-xl md:text-2xl)\n    - Responsive padding and spacing (p-6 md:p-8, mb-6 md:mb-8)\n    - Mobile-first design ensuring readability on all device sizes","size_bytes":7198},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        gold: {\n          DEFAULT: \"hsl(var(--gold))\",\n          foreground: \"hsl(var(--gold-foreground))\",\n        },\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1))\",\n          \"2\": \"hsl(var(--chart-2))\",\n          \"3\": \"hsl(var(--chart-3))\",\n          \"4\": \"hsl(var(--chart-4))\",\n          \"5\": \"hsl(var(--chart-5))\",\n        },\n        sidebar: {\n          DEFAULT: \"hsl(var(--sidebar-background))\",\n          foreground: \"hsl(var(--sidebar-foreground))\",\n          primary: \"hsl(var(--sidebar-primary))\",\n          \"primary-foreground\": \"hsl(var(--sidebar-primary-foreground))\",\n          accent: \"hsl(var(--sidebar-accent))\",\n          \"accent-foreground\": \"hsl(var(--sidebar-accent-foreground))\",\n          border: \"hsl(var(--sidebar-border))\",\n          ring: \"hsl(var(--sidebar-ring))\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2906},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n});\n","size_bytes":894},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"‚Ä¶\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  try {\n    const server = await registerRoutes(app);\n\n    app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n      const status = err.status || err.statusCode || 500;\n      const message = err.message || \"Internal Server Error\";\n\n      res.status(status).json({ message });\n      throw err;\n    });\n\n    // importantly only setup vite in development and after\n    // setting up all the other routes so the catch-all route\n    // doesn't interfere with the other routes\n    if (app.get(\"env\") === \"development\") {\n      await setupVite(app, server);\n    } else {\n      serveStatic(app);\n    }\n\n    // Use PORT environment variable for production (Cloud Run) or default to 5000 for development\n    const port = process.env.PORT ? parseInt(process.env.PORT, 10) : 5000;\n    const host = process.env.NODE_ENV === 'production' ? '0.0.0.0' : 'localhost';\n    \n    const serverInstance = server.listen(port, host)\n    .on('listening', () => {\n      log(`Server listening on ${host}:${port} in ${process.env.NODE_ENV || 'development'} mode`);\n    })\n    .on('error', (err: any) => {\n      if (err.code === 'EADDRINUSE') {\n        log(`Port ${port} is already in use. Please use a different port.`);\n      } else {\n        log(`Server error: ${err.message}`);\n      }\n      process.exit(1);\n    });\n\n    // Graceful shutdown\n    const shutdown = (signal: string) => {\n      log(`Received ${signal}. Shutting down gracefully...`);\n      serverInstance.close(() => {\n        log('Server closed');\n        process.exit(0);\n      });\n    };\n\n    process.on('SIGTERM', () => shutdown('SIGTERM'));\n    process.on('SIGINT', () => shutdown('SIGINT'));\n  } catch (error) {\n    log(`Failed to initialize server: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    process.exit(1);\n  }\n})();\n","size_bytes":2867},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // put application routes here\n  // prefix all routes with /api\n\n  // use storage to perform CRUD operations on the storage interface\n  // e.g. storage.insertUser(user) or storage.getUserByUsername(username)\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":473},"server/storage.ts":{"content":"import { users, type User, type InsertUser } from \"@shared/schema\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: number): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<number, User>;\n  currentId: number;\n\n  constructor() {\n    this.users = new Map();\n    this.currentId = 1;\n  }\n\n  async getUser(id: number): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = this.currentId++;\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":1012},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2254},"shared/schema.ts":{"content":"import { pgTable, text, serial, integer, boolean } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: serial(\"id\").primaryKey(),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":533},"client/src/App.css":{"content":"#root {\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n}\n\n.logo {\n  height: 6em;\n  padding: 1.5em;\n  will-change: filter;\n  transition: filter 300ms;\n}\n.logo:hover {\n  filter: drop-shadow(0 0 2em #646cffaa);\n}\n.logo.react:hover {\n  filter: drop-shadow(0 0 2em #61dafbaa);\n}\n\n@keyframes logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@media (prefers-reduced-motion: no-preference) {\n  a:nth-of-type(2) .logo {\n    animation: logo-spin infinite 20s linear;\n  }\n}\n\n.card {\n  padding: 2em;\n}\n\n.read-the-docs {\n  color: #888;\n}\n","size_bytes":606},"client/src/App.tsx":{"content":"import { Toaster } from \"@/components/ui/toaster\";\nimport { Toaster as Sonner } from \"@/components/ui/sonner\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Router, Route, Switch } from \"wouter\";\nimport { queryClient } from \"@/lib/queryClient\";\nimport { ThemeProvider } from \"@/components/ThemeProvider\";\nimport Index from \"./pages/Index\";\nimport NotFound from \"./pages/NotFound\";\n\nconst App = () => (\n  <QueryClientProvider client={queryClient}>\n    <ThemeProvider defaultTheme=\"dark\" storageKey=\"wedding-ui-theme\">\n      <TooltipProvider>\n        <Toaster />\n        <Sonner />\n        <Router>\n          <Switch>\n            <Route path=\"/\" component={Index} />\n            {/* ADD ALL CUSTOM ROUTES ABOVE THE CATCH-ALL \"*\" ROUTE */}\n            <Route component={NotFound} />\n          </Switch>\n        </Router>\n      </TooltipProvider>\n    </ThemeProvider>\n  </QueryClientProvider>\n);\n\nexport default App;\n","size_bytes":996},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* Elegant Wedding Design System */\n\n@layer base {\n  :root {\n    /* Groom & Bride Green Theme - #013220 (Dark Green) & #77DD77 (Light Green) */\n    --background: 158 96% 10%; /* Main background - #013220 (Dark Green) */\n    --foreground: 0 0% 100%; /* Pure white text for contrast */\n\n    /* Card Colors */\n    --card: 158 96% 12%; /* Slightly lighter than background */\n    --card-foreground: 0 0% 100%; /* Pure white text on cards */\n\n    /* Popover Colors */\n    --popover: 158 96% 14%; /* Lighter popover background */\n    --popover-foreground: 0 0% 100%; /* Pure white text */\n\n    /* Brand Color */\n    --brand: 120 57% 67%; /* Light green brand color #77DD77 */\n    \n    /* Primary Colors */\n    --primary: 158 96% 15%; /* Medium dark green primary */\n    --primary-foreground: 0 0% 100%; /* Pure white text on primary */\n\n    /* Secondary Colors */\n    --secondary: 158 90% 20%; /* Medium green secondary */\n    --secondary-foreground: 0 0% 100%; /* Pure white text */\n\n    /* Muted Colors */\n    --muted: 158 80% 25%; /* Muted green */\n    --muted-foreground: 0 0% 100%; /* Pure white muted text */\n\n    /* Accent Colors */\n    --accent: 120 57% 67%; /* Light green accent #77DD77 */\n    --accent-foreground: 158 96% 10%; /* Dark text on light green */\n\n    /* Gold/Special Accent - now light green tone */\n    --gold: 120 57% 67%; /* Light green color #77DD77 */\n    --gold-foreground: 158 96% 10%; /* Dark green text on light green */\n\n    /* Green Palette - variations of green theme */\n    --dark-green: 158 96% 10%; /* #013220 */\n    --medium-dark-green: 158 90% 15%; /* Slightly lighter */\n    --medium-green: 158 80% 30%; /* Medium green */\n    --light-green: 120 57% 67%; /* #77DD77 */\n    --soft-green: 120 50% 75%; /* Softer light green */\n    --pale-green: 120 40% 85%; /* Pale green */\n    --mint-green: 140 45% 70%; /* Mint green variation */\n    --forest-green: 150 85% 20%; /* Forest green variation */\n\n    /* Destructive */\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 0 0% 100%;\n\n    /* Borders & Inputs */\n    --border: 158 80% 25%; /* Green border */\n    --input: 158 90% 15%; /* Dark green input */\n    --ring: 120 57% 67%; /* Light green focus ring */\n\n    /* Border Radius */\n    --radius: 0.75rem;\n\n    /* Green Theme Gradients */\n    --gradient-elegant: linear-gradient(135deg, hsl(158, 96%, 10%), hsl(158, 90%, 15%));\n    --gradient-gold: linear-gradient(135deg, hsl(120, 57%, 67%), hsl(120, 50%, 75%));\n    --gradient-warm: linear-gradient(135deg, hsl(158, 96%, 12%), hsl(158, 85%, 20%));\n\n    /* Green Theme Shadows */\n    --shadow-elegant: 0 20px 50px -10px rgba(1, 50, 32, 0.4);\n    --shadow-soft: 0 10px 30px -5px rgba(1, 50, 32, 0.3);\n    --shadow-warm: 0 15px 40px -8px rgba(1, 50, 32, 0.25);\n\n    /* Elegant Typography Scale */\n    --font-display: 'Boska', 'Cormorant Garamond', serif; /* Headers - Boska 700 */\n    --font-script: 'Boska', 'Cormorant Garamond', serif; /* Sub-headers - Boska 500 */\n    --font-times: 'Times New Roman', Times, serif;\n    --font-body: 'Satoshi', 'Inter', -apple-system, BlinkMacSystemFont, system-ui, sans-serif; /* Body text */\n\n    /* Smooth Transitions */\n    --transition-elegant: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n\n    --sidebar-background: 158 96% 12%;\n    --sidebar-foreground: 0 0% 100%;\n    --sidebar-primary: 158 90% 20%;\n    --sidebar-primary-foreground: 0 0% 100%;\n    --sidebar-accent: 120 57% 67%;\n    --sidebar-accent-foreground: 158 96% 10%;\n    --sidebar-border: 158 80% 25%;\n    --sidebar-ring: 120 57% 67%;\n  }\n\n  /* Custom Wedding Animations */\n  @keyframes fadeInUp {\n    from {\n      opacity: 0;\n      transform: translateY(30px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n\n  @keyframes fadeInScale {\n    from {\n      opacity: 0;\n      transform: scale(0.9);\n    }\n    to {\n      opacity: 1;\n      transform: scale(1);\n    }\n  }\n\n  @keyframes underlineGold {\n    from {\n      width: 0;\n    }\n    to {\n      width: 100%;\n    }\n  }\n\n  @keyframes parallaxFloat {\n    0%, 100% {\n      transform: translateY(0px);\n    }\n    50% {\n      transform: translateY(-10px);\n    }\n  }\n}\n\n/* Responsive clip-path variables for story images */\n@media (min-width: 768px) {\n  :root {\n    --clip-path-1: url(#clipPath-1);\n    --clip-path-2: url(#clipPath-2);\n    --clip-path-3: url(#clipPath-3);\n    --clip-path-4: url(#clipPath-4);\n    --clip-path-5: url(#clipPath-5);\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n    outline: none !important;\n  }\n\n  html {\n    @apply bg-background;\n  }\n\n  body {\n    @apply bg-background text-foreground font-body;\n    font-family: var(--font-body);\n  }\n\n\n\n  .font-display {\n    font-family: var(--font-display);\n    font-weight: 700;\n  }\n\n  .font-body {\n    font-family: var(--font-body);\n  }\n\n  .font-script {\n    font-family: var(--font-script);\n    font-weight: 500;\n  }\n\n  .font-times {\n    font-family: var(--font-times);\n  }\n\n  /* Mobile-First Responsive Typography */\n  .text-hero {\n    @apply text-5xl sm:text-6xl lg:text-7xl xl:text-8xl font-display font-light tracking-tight;\n    line-height: 0.9;\n    letter-spacing: 0.15em;\n  }\n\n  .text-hero-script {\n    @apply text-3xl sm:text-4xl lg:text-5xl font-script font-normal italic;\n    line-height: 1.2;\n  }\n\n  .text-subtitle {\n    @apply text-lg sm:text-xl lg:text-2xl font-body font-light tracking-wider;\n    letter-spacing: 0.05em;\n  }\n\n  .text-section-title {\n    @apply text-2xl sm:text-3xl lg:text-4xl font-display font-semibold tracking-tight;\n  }\n\n  .text-elegant-body {\n    @apply text-base sm:text-lg leading-relaxed font-body;\n  }\n\n  /* Animation Classes */\n  .animate-fade-up {\n    animation: fadeInUp 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;\n  }\n\n  .animate-fade-scale {\n    animation: fadeInScale 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;\n  }\n\n  .animate-float {\n    animation: parallaxFloat 6s ease-in-out infinite;\n  }\n\n  /* Elegant Hover Effects */\n  .hover-elegant {\n    @apply transition-all duration-300 hover:scale-105 hover:shadow-lg;\n  }\n\n  .gold-underline {\n    @apply relative;\n  }\n\n  .gold-underline::after {\n    content: '';\n    @apply absolute bottom-0 left-0 h-0.5;\n    background-color: hsl(var(--primary));\n    width: 0;\n    transition: width 0.6s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .gold-underline.active::after {\n    width: 100%;\n  }\n\n  /* Clean Mobile Styles */\n  @media (max-width: 768px) {\n    * {\n      box-shadow: none !important;\n      -webkit-box-shadow: none !important;\n      -moz-box-shadow: none !important;\n    }\n\n    img {\n      -webkit-backdrop-filter: none !important;\n      backdrop-filter: none !important;\n      filter: none !important;\n    }\n\n    .shadow-elegant,\n    .shadow-soft,\n    .shadow-warm {\n      box-shadow: none !important;\n    }\n\n    /* Enhanced Mobile Layout Improvements */\n    section {\n      padding-left: 1rem !important;\n      padding-right: 1rem !important;\n    }\n\n    .max-w-4xl, .max-w-3xl, .max-w-2xl {\n      max-width: 100% !important;\n      padding-left: 0.5rem;\n      padding-right: 0.5rem;\n    }\n\n    /* Countdown section mobile improvements */\n    .grid-cols-4 {\n      gap: 0.5rem !important;\n    }\n\n    /* Card padding adjustments */\n    .p-8 {\n      padding: 1rem !important;\n    }\n\n    .p-6 {\n      padding: 0.75rem !important;\n    }\n\n    /* Image sizing for mobile */\n    .w-64 {\n      width: 12rem !important;\n    }\n\n    .h-64 {\n      height: 12rem !important;\n    }\n\n    /* Typography adjustments */\n    .text-4xl {\n      font-size: 2rem !important;\n    }\n\n    .text-5xl {\n      font-size: 2.5rem !important;\n    }\n\n    .text-6xl {\n      font-size: 3rem !important;\n    }\n\n    /* Hero section specific mobile fixes - moved to component */\n\n    /* Slideshow mobile fixes - exactly like video */\n    #slideshow img {\n      display: block !important;\n      width: 100% !important;\n      height: auto !important;\n      object-fit: contain !important;\n      object-position: top !important;\n      margin: 0 !important;\n      padding: 0 !important;\n    }\n  }\n\n  /* Custom Scrollbar */\n  ::-webkit-scrollbar {\n    width: 6px;\n  }\n\n  ::-webkit-scrollbar-track {\n    @apply bg-background;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: rgba(1, 50, 32, 0.4);\n    @apply rounded-full;\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background-color: rgba(1, 50, 32, 0.6);\n  }\n\n  /* Remove any glass/overlay effects and unwanted borders */\n  *::before,\n  *::after {\n    backdrop-filter: none !important;\n    -webkit-backdrop-filter: none !important;\n  }\n\n  /* Fix the red border issue */\n  section {\n    border: none !important;\n    outline: none !important;\n  }\n\n  /* Force all text to be white */\n  * {\n    color: white !important;\n  }\n  \n  /* Specific overrides for common text elements */\n  h1, h2, h3, h4, h5, h6, p, span, div, a, li, td, th, label, input::placeholder {\n    color: white !important;\n  }\n  \n  /* Override any remaining color classes */\n  .text-muted-foreground,\n  .text-gray-600,\n  .text-gray-500,\n  .text-slate-600,\n  .text-neutral-600 {\n    color: white !important;\n  }\n\n  /* Restore proper border-radius for UI elements that need it */\n  .rounded-lg {\n    border-radius: 0.5rem !important;\n  }\n\n  .rounded-xl {\n    border-radius: 0.75rem !important;\n  }\n\n  .rounded-2xl {\n    border-radius: 1rem !important;\n  }\n\n  /* Accessible focus styles for blue theme */\n  *:focus-visible {\n    outline: 2px solid hsl(var(--ring));\n    outline-offset: 2px;\n  }\n\n  /* From Uiverse.io by mrhyddenn - Updated for #180806 theme */\n  .shadow__btn {\n    padding: 10px 20px;\n    border: none;\n    font-size: 17px;\n    color: hsl(var(--foreground));\n    border-radius: 7px;\n    letter-spacing: 4px;\n    font-weight: 700;\n    text-transform: uppercase;\n    transition: 0.5s;\n    transition-property: box-shadow;\n    background: hsl(var(--gold));\n    box-shadow: 0 0 25px hsl(var(--gold));\n  }\n\n  .shadow__btn:hover {\n    box-shadow: 0 0 5px hsl(var(--gold)),\n                0 0 25px hsl(var(--gold)),\n                0 0 50px hsl(var(--gold)),\n                0 0 100px hsl(var(--gold));\n  }\n\n  /* Image Loop Animation Styles */\n  .image-loop-section {\n    position: relative;\n  }\n\n  .image-loop-container {\n    width: 100%;\n    overflow: hidden;\n    mask: linear-gradient(90deg, transparent, white 20%, white 80%, transparent);\n    -webkit-mask: linear-gradient(90deg, transparent, white 20%, white 80%, transparent);\n  }\n\n  .image-loop-track {\n    display: flex;\n    animation: imageLoop 60s linear infinite;\n    width: fit-content;\n  }\n\n  .image-loop-track-static {\n    display: flex;\n    width: fit-content;\n  }\n\n  .image-loop-item {\n    flex-shrink: 0;\n    margin-right: 2rem;\n    width: 300px;\n    height: 200px;\n    overflow: hidden;\n    border-radius: 12px;\n    box-shadow: 0 10px 30px rgba(1, 50, 32, 0.5);\n  }\n\n  .image-loop-img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: center;\n    transition: transform 0.3s ease;\n  }\n\n  .image-loop-item:hover .image-loop-img {\n    transform: scale(1.05);\n  }\n\n  @keyframes imageLoop {\n    0% {\n      transform: translateX(0);\n    }\n    100% {\n      transform: translateX(-50%);\n    }\n  }\n\n  /* Pause animation on hover for better UX */\n  .image-loop-track:hover {\n    animation-play-state: paused;\n  }\n\n  /* Alternating Section Backgrounds */\n  .section-pastel-blue {\n    @apply bg-background text-foreground;\n  }\n\n  .section-hard-blue {\n    @apply bg-primary text-primary-foreground;\n  }\n\n  /* Mobile responsive adjustments */\n  @media (max-width: 768px) {\n    .image-loop-item {\n      width: 250px;\n      height: 167px;\n      margin-right: 1rem;\n    }\n\n    .image-loop-track {\n      animation-duration: 45s;\n    }\n  }\n}\n\n/* UIverse Location Guide Button - Updated for #180806 theme */\n.location-guide-btn {\n  width: 10em;\n  position: relative;\n  height: 3.5em;\n  border: 3px ridge hsl(var(--gold));\n  outline: none;\n  background-color: transparent;\n  color: hsl(var(--foreground));\n  transition: 1s;\n  border-radius: 0.3em;\n  font-size: 16px;\n  font-weight: bold;\n  cursor: pointer;\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.location-guide-btn::after {\n  content: \"\";\n  position: absolute;\n  top: -10px;\n  left: 3%;\n  width: 95%;\n  height: 40%;\n  background-color: hsl(var(--primary));\n  transition: 0.5s;\n  transform-origin: center;\n  z-index: -1;\n}\n\n.location-guide-btn::before {\n  content: \"\";\n  transform-origin: center;\n  position: absolute;\n  top: 80%;\n  left: 3%;\n  width: 95%;\n  height: 40%;\n  background-color: hsl(var(--primary));\n  transition: 0.5s;\n  z-index: -1;\n}\n\n.location-guide-btn:hover::before, \n.location-guide-btn:hover::after {\n  transform: scale(0);\n}\n\n.location-guide-btn:hover {\n  box-shadow: inset 0px 0px 25px hsl(var(--gold));\n}","size_bytes":12842},"client/src/main.tsx":{"content":"import { createRoot } from 'react-dom/client'\nimport App from './App.tsx'\nimport './index.css'\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":158},"client/src/vite-env.d.ts":{"content":"/// <reference types=\"vite/client\" />\n","size_bytes":38},"client/src/components/CountdownSection.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { useAnimationContext } from '@/contexts/AnimationContext';\n\nconst CountdownSection = () => {\n  const [timeLeft, setTimeLeft] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  });\n  const { animationsEnabled } = useAnimationContext();\n\n  useEffect(() => {\n    const targetDate = new Date('December 27, 2025 14:30:00').getTime();\n\n    const updateTimer = () => {\n      const now = new Date().getTime();\n      const difference = targetDate - now;\n\n      if (difference > 0) {\n        setTimeLeft({\n          days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n          hours: Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n          minutes: Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60)),\n          seconds: Math.floor((difference % (1000 * 60)) / 1000)\n        });\n      }\n    };\n\n    updateTimer();\n    const interval = setInterval(updateTimer, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <motion.section \n      id=\"countdown\" \n      className=\"bg-background pt-[10px] pb-20 px-4\"\n      initial={animationsEnabled ? { opacity: 0 } : { opacity: 1 }}\n      animate={{ opacity: 1 }}\n      transition={animationsEnabled ? { duration: 1, delay: 2.5 } : { duration: 0 }}\n    >\n      <div className=\"max-w-4xl mx-auto text-center\">\n        {/* Section Header */}\n        <motion.div \n          className=\"mb-16\"\n          initial={animationsEnabled ? { opacity: 0, y: 30 } : { opacity: 1, y: 0 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={animationsEnabled ? { duration: 0.8, ease: \"easeOut\", delay: 0.3 } : { duration: 0 }}\n        >\n          <h2 className=\"text-5xl font-display italic text-primary mb-8\" data-testid=\"text-countdown-title\">\n            Forever starts soon\n          </h2>\n        </motion.div>\n\n\n\n        {/* Countdown Timer Grid */}\n        <motion.div \n          className=\"grid grid-cols-4 gap-4 md:gap-8 max-w-lg mx-auto\"\n          initial={animationsEnabled ? { opacity: 0, y: 30 } : { opacity: 1, y: 0 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={animationsEnabled ? { duration: 0.8, ease: \"easeOut\", delay: 0.6 } : { duration: 0 }}\n        >\n          {[\n            { label: 'Days', value: timeLeft.days },\n            { label: 'Hours', value: timeLeft.hours },\n            { label: 'Minutes', value: timeLeft.minutes },\n            { label: 'Seconds', value: timeLeft.seconds }\n          ].map((item, index) => (\n            <motion.div\n              key={item.label}\n              className=\"text-center\"\n              initial={animationsEnabled ? { opacity: 0, scale: 0.8 } : { opacity: 1, scale: 1 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={animationsEnabled ? { \n                duration: 0.6, \n                ease: \"easeOut\", \n                delay: 0.8 + (index * 0.1) \n              } : { duration: 0 }}\n              data-testid={`countdown-${item.label.toLowerCase()}`}\n            >\n              <motion.div \n                className=\"text-4xl md:text-5xl font-display font-bold text-primary mb-2\"\n                key={item.value}\n                initial={animationsEnabled ? { opacity: 0.7, scale: 0.9 } : { opacity: 1, scale: 1 }}\n                animate={{ opacity: 1, scale: 1 }}\n                transition={animationsEnabled ? { duration: 0.3 } : { duration: 0 }}\n              >\n                {item.value.toString().padStart(2, '0')}\n              </motion.div>\n              <div className=\"text-xs md:text-sm font-body uppercase tracking-wider text-foreground/60\">\n                {item.label}\n              </div>\n            </motion.div>\n          ))}\n        </motion.div>\n\n        {/* Decorative Elements */}\n        <motion.div \n          className=\"mt-16 flex justify-center space-x-4\"\n          initial={animationsEnabled ? { opacity: 0 } : { opacity: 1 }}\n          animate={{ opacity: 1 }}\n          transition={animationsEnabled ? { duration: 0.8, ease: \"easeOut\", delay: 1.4 } : { duration: 0 }}\n        >\n          <div className=\"w-12 h-px bg-gold\"></div>\n          <div className={`w-2 h-2 rounded-full text-gold bg-gold ${animationsEnabled ? 'animate-float' : ''}`}></div>\n          <div className=\"w-12 h-px bg-gold\"></div>\n        </motion.div>\n      </div>\n    </motion.section>\n  );\n};\n\nexport default CountdownSection;","size_bytes":4445},"client/src/components/DressCodeSection.tsx":{"content":"import { motion } from 'framer-motion';\n\nimport attireGuideImage from \"@assets/attire-guide_1758345921277.png\";\n\nconst DressCodeSection = () => {\n  return (\n    <motion.section \n      id=\"dresscode\" \n      className=\"bg-background py-20 px-4 relative overflow-hidden\"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 1, delay: 7.5 }}\n    >\n      {/* Background Pattern */}\n      <div className=\"absolute inset-0 opacity-5\">\n        <div className=\"absolute top-1/3 left-1/4 w-64 h-64 border border-border rounded-full\"></div>\n        <div className=\"absolute bottom-1/3 right-1/4 w-48 h-48 border border-border rounded-full\"></div>\n      </div>\n      <div className=\"max-w-4xl mx-auto relative z-10\">\n        {/* Section Header */}\n        <motion.div \n          className=\"text-center mb-16 relative\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, ease: \"easeOut\", delay: 7.8 }}\n        >\n          {/* Decorative Elements */}\n          <div className=\"absolute top-0 left-1/4 w-8 h-8 border-2 border-border/30 rounded-full\"></div>\n          <div className=\"absolute top-4 right-1/4 w-4 h-4 bg-primary/20 rounded-full\"></div>\n          <div className=\"absolute bottom-0 left-1/3 w-6 h-6 border border-border/40 rounded-full\"></div>\n          <div className=\"absolute bottom-2 right-1/3 w-3 h-3 bg-primary/30 rounded-full\"></div>\n\n          <h2 className=\"font-display italic text-primary mb-8 text-[48px]\" data-testid=\"text-dresscode-title\">\n            Attire Guide\n          </h2>\n          <div className=\"bg-card/20 border border-border/30 rounded-xl p-6 max-w-2xl mx-auto relative\">\n            <p className=\"text-lg text-foreground mb-4\">\n              Please come to your formal and semi-formal attire. We encourage you to dress according to our color motif.\n            </p>\n          </div>\n        </motion.div>\n\n        {/* Attire Image */}\n        <motion.div \n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, ease: \"easeOut\", delay: 8.2 }}\n        >\n          <motion.img \n            src={attireGuideImage}\n            alt=\"Wedding attire guide for men and women guests\"\n            className=\"w-full max-w-lg mx-auto object-contain rounded-2xl shadow-md\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 8.5 }}\n          />\n        </motion.div>\n\n        {/* Color Palette */}\n        <motion.div \n          className=\"mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, ease: \"easeOut\", delay: 8.7 }}\n        >\n          <div className=\"bg-card/30 border border-border rounded-xl p-8 shadow-soft max-w-2xl mx-auto\">\n            <h3 className=\"text-xl font-body font-medium text-foreground mb-6 text-center\">\n              Color Guide Palette\n            </h3>\n            <div className=\"grid grid-cols-3 gap-6 max-w-lg mx-auto\">\n              <div className=\"text-center group\">\n                <div \n                  className=\"w-20 h-20 mx-auto rounded-full border-2 border-border shadow-soft group-hover:scale-105 transition-transform duration-300\"\n                  style={{ backgroundColor: '#eddae0' }}\n                ></div>\n                <p className=\"text-sm font-medium text-foreground mt-3 mb-1\">\n                  Soft Rose\n                </p>\n                <p className=\"text-xs text-foreground/80 font-mono\">\n                  #eddae0\n                </p>\n              </div>\n              <div className=\"text-center group\">\n                <div \n                  className=\"w-20 h-20 mx-auto rounded-full border-2 border-border shadow-soft group-hover:scale-105 transition-transform duration-300\"\n                  style={{ backgroundColor: '#cfdbe9' }}\n                ></div>\n                <p className=\"text-sm font-medium text-foreground mt-3 mb-1\">\n                  Powder Blue\n                </p>\n                <p className=\"text-xs text-foreground/80 font-mono\">\n                  #cfdbe9\n                </p>\n              </div>\n              <div className=\"text-center group\">\n                <div \n                  className=\"w-20 h-20 mx-auto rounded-full border-2 border-border shadow-soft group-hover:scale-105 transition-transform duration-300\"\n                  style={{ backgroundColor: '#db969b' }}\n                ></div>\n                <p className=\"text-sm font-medium text-foreground mt-3 mb-1\">\n                  Dusty Pink\n                </p>\n                <p className=\"text-xs text-foreground/80 font-mono\">\n                  #db969b\n                </p>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Rules and Details */}\n        <motion.div \n          className=\"bg-card/30 border border-border rounded-xl p-8 shadow-soft max-w-3xl mx-auto\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, ease: \"easeOut\", delay: 8.8 }}\n        >\n          <div className=\"space-y-6\">\n            <motion.div \n              className=\"bg-card/20 rounded-xl p-6 border border-border/50\"\n              initial={{ opacity: 0, x: -20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6, delay: 9.1 }}\n            >\n              <div className=\"flex items-start gap-3\">\n                <div className=\"w-2 h-2 bg-primary rounded-full mt-2 flex-shrink-0\"></div>\n                <div>\n                  <h4 className=\"font-medium text-foreground mb-2\">Gentlemen: White long-sleeve and black pants</h4>\n                </div>\n              </div>\n            </motion.div>\n\n            <motion.div \n              className=\"bg-card/20 rounded-xl p-6 border border-border/50\"\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6, delay: 9.3 }}\n            >\n              <div className=\"flex items-start gap-3\">\n                <div className=\"w-2 h-2 bg-primary rounded-full mt-2 flex-shrink-0\"></div>\n                <div>\n                  <h4 className=\"font-medium text-foreground mb-2\">Ladies: Cocktail or long dress</h4>\n                </div>\n              </div>\n            </motion.div>\n\n            <motion.div \n              className=\"bg-card/20 rounded-xl p-6 border border-border/50\"\n              initial={{ opacity: 0, x: -20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6, delay: 9.5 }}\n            >\n              <div className=\"flex items-start gap-3\">\n                <div className=\"w-2 h-2 bg-primary rounded-full mt-2 flex-shrink-0\"></div>\n                <div>\n                  <h4 className=\"font-medium text-foreground mb-2\">Strictly no denim pants, t-shirts and rubber shoes</h4>\n                </div>\n              </div>\n            </motion.div>\n          </div>\n        </motion.div>\n      </div>\n    </motion.section>\n  );\n};\n\nexport default DressCodeSection;","size_bytes":7230},"client/src/components/EntourageSection.tsx":{"content":"import { motion } from 'framer-motion';\nimport entourage1Image from \"@assets/entourage1_1758345926557.jpg\";\nimport entourage2Image from \"@assets/entourage2_1758345926556.jpg\";\n\nconst EntourageSection = () => {\n  return (\n    <motion.section \n      id=\"entourage\" \n      className=\"section-hard-blue py-20 px-4 relative overflow-hidden\"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 1, delay: 8.5 }}\n    >\n      {/* Background Elements */}\n      <div className=\"absolute inset-0 opacity-10\">\n        <div className=\"absolute top-0 right-0 w-96 h-96 border border-[#333333] rounded-full transform translate-x-1/3 -translate-y-1/3\"></div>\n        <div className=\"absolute bottom-0 left-0 w-96 h-96 border border-[#333333] rounded-full transform -translate-x-1/3 translate-y-1/3\"></div>\n      </div>\n\n      <div className=\"max-w-6xl mx-auto text-center relative z-10\">\n        <motion.h2 \n          className=\"text-4xl md:text-5xl lg:text-6xl font-display font-bold text-white mb-12 md:mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, ease: \"easeOut\", delay: 8.5 }}\n        >\n          Entourage\n        </motion.h2>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-12 md:mb-16\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, ease: \"easeOut\", delay: 8.8 }}\n          >\n            <img \n              src={entourage1Image}\n              alt=\"Consuegra - Arro Wedding Entourage - Parents and Sponsors\"\n              className=\"w-full max-w-2xl mx-auto object-contain rounded-lg shadow-lg\"\n              data-testid=\"img-entourage-1\"\n            />\n          </motion.div>\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, ease: \"easeOut\", delay: 9.0 }}\n          >\n            <img \n              src={entourage2Image}\n              alt=\"Consuegra - Arro Wedding Entourage - Wedding Party\"\n              className=\"w-full max-w-2xl mx-auto object-contain rounded-lg shadow-lg\"\n              data-testid=\"img-entourage-2\"\n            />\n          </motion.div>\n        </div>\n      </div>\n    </motion.section>\n  );\n};\n\nexport default EntourageSection;","size_bytes":2393},"client/src/components/FAQSection.tsx":{"content":"import { useState } from 'react';\nimport { ChevronDown, ChevronUp, Camera, Clock, Users, Calendar } from 'lucide-react';\nimport { motion } from 'framer-motion';\n\nconst FAQSection = () => {\n  const [openItems, setOpenItems] = useState<number[]>([]);\n\n  const toggleItem = (index: number) => {\n    setOpenItems(prev => \n      prev.includes(index) \n        ? prev.filter(i => i !== index)\n        : [...prev, index]\n    );\n  };\n\n  const faqs = [\n    {\n      question: \"What happens during the ceremony?\",\n      icon: Camera,\n      answer: \"UNPLUGGED CEREMONY - We've hired the services of skilled photographers to capture the cherished moments of our day, allowing you to unwind, immerse yourself in the experience, and share it alongside us. Our photos will be available once the wedding is over. Please ensure the aisle remains unobstructed as the bridal entrance takes place. Rest assured, after the ceremony and throughout the entire reception, feel free to capture as many photos and videos as you'd like. Your memories are important to us, and we encourage you to preserve them. Kindly ensure that all children remain quiet and respectful throughout the wedding ceremony to maintain a serene and meaningful atmosphere.\"\n    },\n    {\n      question: \"What time should I arrive?\",\n      icon: Clock,\n      answer: \"Help us get the party started as scheduled! We recommend that you arrive an hour or 30 mins before the start of the ceremony to make sure everyone is seated on time. We encourage you to consider the travel time and traffic going to the venue.\"\n    },\n    {\n      question: \"Can I bring someone with me?\",\n      icon: Users,\n      answer: \"Unfortunately, due to space and seating constraints, our guest list is under strict limitations. As our event operates on an exclusive RSVP basis, we can only accommodate those who have formally confirmed their presence. We kindly ask for your understanding in adhering to our policy of not bringing uninvited guests. Your cooperation in this matter is greatly appreciated, as it ensures that every guest has a comfortable and enjoyable experience.\"\n    },\n    {\n      question: \"When is the appropriate time to leave?\",\n      icon: Calendar,\n      answer: \"Having you here with us is the most precious gift of all. We kindly request your presence throughout the entirety of our reception program. Should you need to depart early, we'd greatly appreciate the opportunity to express our gratitude and bid you farewell. However, we kindly request that you consider staying until after our Thanksgiving Speech.\"\n    }\n  ];\n\n  return (\n    <motion.section \n      className=\"section-pastel-blue py-20 px-4\"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 1, delay: 11.5 }}\n    >\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Section Header */}\n        <motion.div \n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, ease: \"easeOut\", delay: 11.8 }}\n        >\n          <h2 className=\"text-5xl font-display italic text-primary mb-8\" data-testid=\"text-faq-title\">\n            Frequently Asked Questions\n          </h2>\n          <p className=\"text-lg font-body text-foreground max-w-2xl mx-auto\">\n            We've compiled answers to the most common questions about our wedding day. \n            If you have additional questions, please don't hesitate to contact us.\n          </p>\n        </motion.div>\n\n        {/* FAQ Accordion */}\n        <div className=\"space-y-4\">\n          {faqs.map((faq, index) => (\n            <motion.div\n              key={index}\n              className=\"bg-card/30 border border-border rounded-xl shadow-soft overflow-hidden\"\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, ease: \"easeOut\", delay: 12.1 + (index * 0.1) }}\n            >\n              <button\n                onClick={() => toggleItem(index)}\n                className=\"w-full px-8 py-6 text-left flex items-center justify-between hover:bg-gold/5 transition-colors duration-300\"\n              >\n                <div className=\"flex items-center gap-3\">\n                  <faq.icon className=\"w-5 h-5 text-gold flex-shrink-0\" />\n                  <h3 className=\"text-lg font-display font-bold text-foreground\">\n                    {faq.question}\n                  </h3>\n                </div>\n                <div className=\"flex-shrink-0\">\n                  {openItems.includes(index) ? (\n                    <ChevronUp className=\"w-5 h-5 text-gold\" />\n                  ) : (\n                    <ChevronDown className=\"w-5 h-5 text-gold\" />\n                  )}\n                </div>\n              </button>\n              \n              {openItems.includes(index) && (\n                <div className=\"px-8 pb-6\">\n                  <div className=\"w-full h-px bg-border mb-4\"></div>\n                  <p className=\"text-foreground leading-relaxed\">\n                    {faq.answer}\n                  </p>\n                </div>\n              )}\n            </motion.div>\n          ))}\n        </div>\n      </div>\n    </motion.section>\n  );\n};\n\nexport default FAQSection;","size_bytes":5264},"client/src/components/Footer.tsx":{"content":"import { Heart, Phone } from 'lucide-react';\nimport { motion } from 'framer-motion';\nimport BotanicalLayer from '@/components/BotanicalLayer';\nimport whitePeonies from '@assets/1_1758357477982.png';\nimport whiteFlower from '@assets/2_1758357477983.png';\nimport delicateBranch from '@assets/4_1758357477984.png';\n\nconst Footer = () => {\n  return (\n    <motion.footer \n      className=\"bg-primary text-primary-foreground py-16 px-4 relative overflow-hidden\"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 1, delay: 12.5 }}\n    >\n      {/* Magnolia Garland */}\n      <div className=\"absolute top-0 left-0 w-full h-20 z-5\">\n        <BotanicalLayer\n          src={whitePeonies}\n          alt=\"\"\n          testId=\"footer-magnolia-left\"\n          top=\"10px\"\n          left=\"10%\"\n          width=\"50px\"\n          height=\"auto\"\n          opacity={0.3}\n          zIndex={2}\n          rotate={15}\n          variant=\"idleFloat\"\n          delay={4.0}\n          className=\"filter drop-shadow-lg\"\n          ariaHidden={true}\n        />\n        \n        <BotanicalLayer\n          src={whiteFlower}\n          alt=\"\"\n          testId=\"footer-magnolia-center-left\"\n          top=\"5px\"\n          left=\"30%\"\n          width=\"40px\"\n          height=\"auto\"\n          opacity={0.25}\n          zIndex={2}\n          rotate={-10}\n          variant=\"idleFloat\"\n          delay={4.5}\n          className=\"filter drop-shadow-lg\"\n          ariaHidden={true}\n        />\n        \n        <BotanicalLayer\n          src={delicateBranch}\n          alt=\"\"\n          testId=\"footer-magnolia-center\"\n          top=\"0px\"\n          left=\"50%\"\n          width=\"45px\"\n          height=\"auto\"\n          opacity={0.3}\n          zIndex={2}\n          rotate={0}\n          variant=\"idleFloat\"\n          delay={4.2}\n          className=\"filter drop-shadow-lg transform -translate-x-1/2\"\n          ariaHidden={true}\n        />\n        \n        <BotanicalLayer\n          src={whiteFlower}\n          alt=\"\"\n          testId=\"footer-magnolia-center-right\"\n          top=\"5px\"\n          right=\"30%\"\n          width=\"40px\"\n          height=\"auto\"\n          opacity={0.25}\n          zIndex={2}\n          rotate={10}\n          variant=\"idleFloat\"\n          delay={4.7}\n          className=\"filter drop-shadow-lg\"\n          ariaHidden={true}\n        />\n        \n        <BotanicalLayer\n          src={whitePeonies}\n          alt=\"\"\n          testId=\"footer-magnolia-right\"\n          top=\"10px\"\n          right=\"10%\"\n          width=\"50px\"\n          height=\"auto\"\n          opacity={0.3}\n          zIndex={2}\n          rotate={-15}\n          variant=\"idleFloat\"\n          delay={4.3}\n          className=\"filter drop-shadow-lg\"\n          ariaHidden={true}\n        />\n      </div>\n\n      <div className=\"max-w-4xl mx-auto relative z-10\">\n        {/* Main Footer Content */}\n        <motion.div \n          className=\"text-center space-y-8 pt-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, ease: \"easeOut\", delay: 12.8 }}\n        >\n          {/* Couple Names */}\n          <div>\n            <h2 className=\"text-3xl sm:text-4xl mb-2\" style={{ fontFamily: 'Boska, serif', fontWeight: 300 }}>\n              Paula\n              <span className=\"text-primary-foreground mx-3\">&</span>\n              Rafael\n            </h2>\n            <p className=\"text-primary-foreground text-lg\">\n              December 27, 2025 ‚Ä¢ St. James the Great Parish Alabang\n            </p>\n          </div>\n\n          {/* Botanical Decorative Elements */}\n          <div className=\"flex justify-center items-center space-x-6 py-6\">\n            <div className=\"w-16 h-px bg-primary-foreground/30\"></div>\n            \n            <div className=\"flex items-center space-x-3\">\n              <BotanicalLayer\n                src={delicateBranch}\n                alt=\"\"\n                testId=\"footer-decorative-branch-left\"\n                width=\"20px\"\n                height=\"auto\"\n                opacity={0.4}\n                zIndex={1}\n                rotate={-15}\n                variant=\"idleFloat\"\n                delay={5.0}\n                className=\"filter drop-shadow-lg relative\"\n                ariaHidden={true}\n              />\n              \n              <Heart className=\"w-6 h-6 text-primary-foreground animate-float\" />\n              \n              <BotanicalLayer\n                src={delicateBranch}\n                alt=\"\"\n                testId=\"footer-decorative-branch-right\"\n                width=\"20px\"\n                height=\"auto\"\n                opacity={0.4}\n                zIndex={1}\n                rotate={15}\n                variant=\"idleFloat\"\n                delay={5.2}\n                className=\"filter drop-shadow-lg relative\"\n                ariaHidden={true}\n              />\n            </div>\n            \n            <div className=\"w-16 h-px bg-primary-foreground/30\"></div>\n          </div>\n\n          {/* Thank You Message */}\n          <div className=\"max-w-2xl mx-auto\">\n            <p className=\"text-primary-foreground leading-relaxed italic\">\n              We're grateful to have you as part of our story. You've made our journey more beautiful, and we can't wait to share our special day with you.\n            </p>\n          </div>\n\n          {/* Bottom Border */}\n          <div className=\"border-t border-primary-foreground/20 pt-8\">\n            <p className=\"text-primary-foreground text-sm\">\n              With love and gratitude,\n            </p>\n            <p className=\"text-primary-foreground\" style={{ fontFamily: 'Boska, serif', fontWeight: 300 }}>\n              Paula & Rafael\n            </p>\n          </div>\n        </motion.div>\n      </div>\n      {/* Background Decorative Elements */}\n      <div className=\"absolute bottom-0 left-0 w-full h-32 bg-gradient-to-t from-background to-transparent opacity-50 pointer-events-none\"></div>\n    </motion.footer>\n  );\n};\n\nexport default Footer;","size_bytes":5990},"client/src/components/GiftSection.tsx":{"content":"import { Heart, Gift, Home } from 'lucide-react';\nimport { motion } from 'framer-motion';\nimport gcashQrImage from '@assets/gcashQr_1758345913818.jpg';\nimport bpiQrImage from '@assets/BpiQr_1758345913820.jpg';\nimport metroBankQrImage from '@assets/metroBankQr_1758345913818.jpg';\n\nconst GiftSection = () => {\n  return (\n    <motion.section \n      className=\"section-hard-blue py-20 px-4 relative overflow-hidden\"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 1, delay: 9.5 }}\n    >\n      {/* Background Decorative Elements */}\n      <div className=\"absolute inset-0 opacity-5\">\n        <div className=\"absolute top-1/4 left-1/4 w-32 h-32 border border-[#333333] rounded-full animate-float\"></div>\n        <div className=\"absolute bottom-1/4 right-1/4 w-48 h-48 border border-[#333333] rounded-full animate-float\" style={{ animationDelay: '2s' }}></div>\n        <div className=\"absolute top-3/4 left-3/4 w-24 h-24 border border-[#333333] rounded-full animate-float\" style={{ animationDelay: '4s' }}></div>\n      </div>\n      <div className=\"max-w-4xl mx-auto text-center relative z-10\">\n        {/* Section Header */}\n        <motion.div \n          className=\"mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, ease: \"easeOut\", delay: 9.8 }}\n        >\n          <h2 className=\"text-5xl font-display italic text-primary-foreground mb-8\" data-testid=\"text-gifts-title\">\n            Wedding Gifts\n          </h2>\n        </motion.div>\n\n        {/* Main Gift Message */}\n        <motion.div \n          className=\"mb-12\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, ease: \"easeOut\", delay: 10.1 }}\n        >\n          <div className=\"bg-card/30 border border-border rounded-xl p-12 shadow-soft hover-elegant\">\n            {/* Icon */}\n            <div className=\"w-20 h-20 bg-[#333333]/10 rounded-full flex items-center justify-center mx-auto mb-8\">\n              <Heart className=\"w-10 h-10 text-[#ffffff]\" />\n            </div>\n\n            {/* Main Message */}\n            <div className=\"space-y-6\">\n              <p className=\"text-xl font-body text-primary-foreground leading-relaxed\">\n                With all that we have, we are truly blessed, your presence and prayer are that we request. But if you desire to give nonetheless, monetary gifts are what we suggest.\n              </p>\n            </div>\n\n            {/* Decorative Elements */}\n            <div className=\"mt-8 flex justify-center items-center space-x-4\">\n              <div className=\"w-12 h-px bg-[#ffffff]/30\"></div>\n              <div className=\"w-3 h-3 bg-[#ffffff] rounded-full animate-float\"></div>\n              <div className=\"w-12 h-px bg-[#ffffff]/30\"></div>\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Payment Options */}\n        <motion.div \n          className=\"max-w-4xl mx-auto mb-12 grid md:grid-cols-3 gap-8\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, ease: \"easeOut\", delay: 10.4 }}\n        >\n          {/* GCash Payment */}\n          <div>\n            <div className=\"bg-card/30 border border-border rounded-xl p-8 shadow-soft hover-elegant\">\n              <h3 className=\"text-lg font-display font-semibold text-primary-foreground mb-4 text-center\">GCash</h3>\n              <div className=\"text-center mb-4\">\n                <img \n                  src={gcashQrImage}\n                  alt=\"GCash QR Code\"\n                  className=\"w-64 h-64 sm:w-72 sm:h-72 mx-auto object-contain\"\n                  data-testid=\"img-gcash-qr\"\n                />\n              </div>\n              <p className=\"text-primary-foreground leading-relaxed text-center\">\n                Scan the QR code to send your gift via GCash\n              </p>\n            </div>\n          </div>\n\n          {/* BPI Payment */}\n          <div>\n            <div className=\"bg-card/30 border border-border rounded-xl p-8 shadow-soft hover-elegant\">\n              <h3 className=\"text-lg font-display font-semibold text-primary-foreground mb-4 text-center\">BPI</h3>\n              <div className=\"text-center mb-4\">\n                <img \n                  src={bpiQrImage}\n                  alt=\"BPI QR Code\"\n                  className=\"w-64 h-64 sm:w-72 sm:h-72 mx-auto object-contain\"\n                  data-testid=\"img-bpi-qr\"\n                />\n              </div>\n              <p className=\"text-primary-foreground leading-relaxed text-center\">\n                Scan the QR code to send your gift via BPI\n              </p>\n            </div>\n          </div>\n\n          {/* Metro Bank Payment */}\n          <div>\n            <div className=\"bg-card/30 border border-border rounded-xl p-8 shadow-soft hover-elegant\">\n              <h3 className=\"text-lg font-display font-semibold text-primary-foreground mb-4 text-center\">Metro Bank</h3>\n              <div className=\"text-center mb-4\">\n                <img \n                  src={metroBankQrImage}\n                  alt=\"Metro Bank QR Code\"\n                  className=\"w-64 h-64 sm:w-72 sm:h-72 mx-auto object-contain\"\n                  data-testid=\"img-metrobank-qr\"\n                />\n              </div>\n              <p className=\"text-primary-foreground leading-relaxed text-center\">\n                Scan the QR code to send your gift via Metro Bank\n              </p>\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    </motion.section>\n  );\n};\n\nexport default GiftSection;","size_bytes":5627},"client/src/components/HeroSection.tsx":{"content":"import { TypeAnimation } from 'react-type-animation';\nimport { useState } from 'react';\nimport heroBackgroundImage from '@assets/new-hero-background_1758350032251.png';\nimport { useAnimationContext } from '@/contexts/AnimationContext';\nimport BotanicalLayer from '@/components/BotanicalLayer';\nimport botanicalLeaf from '@assets/1_1758357477982.png';\nimport whiteMagnolia from '@assets/2_1758357477983.png';\nimport birdOfParadise from '@assets/3_1758357477983.png';\n\nconst HeroSection = () => {\n  const [showElements, setShowElements] = useState(false);\n  const { animationsEnabled } = useAnimationContext();\n\n  return (\n    <section \n      className=\"hero-section relative min-h-screen flex flex-col items-center justify-center overflow-hidden\"\n      style={{\n        backgroundImage: `url(${heroBackgroundImage})`,\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundAttachment: 'scroll',\n        filter: 'brightness(0.7)'\n      }}\n    >\n      {/* Subtle gradient overlay for text readability */}\n      <div className=\"absolute inset-0 bg-gradient-to-b from-black/20 via-black/30 to-black/40\"></div>\n      \n      {/* Botanical Elements */}\n      <BotanicalLayer\n        src={botanicalLeaf}\n        alt=\"\"\n        testId=\"hero-leaf-cluster-top-left\"\n        top=\"10%\"\n        left=\"5%\"\n        width=\"120px\"\n        height=\"auto\"\n        opacity={0.35}\n        zIndex={2}\n        variant=\"idleFloat\"\n        delay={0.5}\n        hideBelow=\"md\"\n        className=\"filter drop-shadow-lg\"\n      />\n      \n      <BotanicalLayer\n        src={botanicalLeaf}\n        alt=\"\"\n        testId=\"hero-leaf-cluster-bottom-right\"\n        bottom=\"15%\"\n        right=\"8%\"\n        width=\"100px\"\n        height=\"auto\"\n        opacity={0.3}\n        zIndex={2}\n        rotate={45}\n        variant=\"idleFloat\"\n        delay={1.2}\n        hideBelow=\"md\"\n        className=\"filter drop-shadow-lg\"\n      />\n      \n      <BotanicalLayer\n        src={whiteMagnolia}\n        alt=\"\"\n        testId=\"hero-magnolia-flourish\"\n        bottom=\"40%\"\n        left=\"50%\"\n        width=\"80px\"\n        height=\"auto\"\n        opacity={0.4}\n        zIndex={2}\n        variant=\"idleFloat\"\n        delay={2.0}\n        hideBelow=\"lg\"\n        className=\"filter drop-shadow-lg transform -translate-x-1/2\"\n      />\n      \n      <BotanicalLayer\n        src={birdOfParadise}\n        alt=\"\"\n        testId=\"hero-bird-of-paradise\"\n        top=\"25%\"\n        right=\"12%\"\n        width=\"90px\"\n        height=\"auto\"\n        opacity={0.25}\n        zIndex={1}\n        rotate={-15}\n        variant=\"idleFloat\"\n        delay={1.8}\n        hideBelow=\"lg\"\n        className=\"filter drop-shadow-lg\"\n      />\n      \n      {/* Content */}\n      <div className=\"relative z-10 text-center px-4 sm:px-6 lg:px-8 max-w-4xl\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-7xl md:text-8xl lg:text-9xl xl:text-[10rem] text-foreground tracking-wide leading-tight\" data-testid=\"text-main-invitation\" style={{ fontFamily: 'Boska, serif', fontWeight: 300 }}>\n            {animationsEnabled ? (\n              <TypeAnimation\n                sequence={[\n                  'PAULA\\n&\\nRAFAEL',\n                  () => {\n                    setShowElements(true);\n                  }\n                ]}\n                wrapper=\"span\"\n                speed={{ type: 'keyStrokeDelayInMs', value: 273 }}\n                style={{ \n                  whiteSpace: 'pre-line',\n                  display: 'inline-block'\n                }}\n                cursor={true}\n                repeat={0}\n                className=\"typewriter-text\"\n              />\n            ) : (\n              <span \n                style={{ \n                  whiteSpace: 'pre-line',\n                  display: 'inline-block'\n                }}\n                className=\"typewriter-text\"\n              >\n                PAULA\n                <br />\n                &\n                <br />\n                RAFAEL\n              </span>\n            )}\n          </h1>\n        </div>\n\n        <div className={`transition-all duration-700 ${(animationsEnabled && showElements) ? 'animate-fade-up opacity-100' : (!animationsEnabled ? 'opacity-100' : 'opacity-0')}`}>\n          <div className=\"bg-card/20 backdrop-blur-md border border-border/30 rounded-2xl p-8 mb-10 max-w-lg mx-auto shadow-2xl\">\n            <div className=\"space-y-3\">\n              <div className=\"text-center\">\n                <p className=\"text-lg sm:text-xl text-foreground font-light tracking-wide font-times\" data-testid=\"text-date\">December 27, 2025 | 2:00 PM</p>\n              </div>\n              <div className=\"text-center\">\n                <p className=\"text-lg sm:text-xl text-foreground font-light tracking-wide font-times\" data-testid=\"text-venue\">\n                  St. James the Great Parish Alabang\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* RSVP Button */}\n          <div className={`transition-all duration-700 opacity-100 mt-[10px] mb-[10px] ${animationsEnabled ? 'animate-fade-scale' : ''}`}>\n            <a href=\"#rsvp\">\n              <button\n                className=\"animated-rsvp-btn\"\n                aria-label=\"RSVP to Wedding\"\n                data-testid=\"button-rsvp-hero\"\n              >\n                <span></span>\n                <span></span>\n                <span></span>\n                <span></span>\n                <span></span>\n                <span>RSVP</span>\n              </button>\n            </a>\n          </div>\n        </div>\n\n      </div>\n      {/* Improved mobile responsiveness */}\n      <style>{`\n        .hero-section {\n          min-height: 100vh !important;\n        }\n        @media (min-width: 768px) {\n          .hero-section {\n            min-height: 100vh !important;\n          }\n        }\n        @media (max-width: 767px) {\n          .hero-section {\n            background-attachment: scroll !important;\n            background-size: cover !important;\n            padding-top: 1rem;\n            padding-bottom: 1rem;\n            min-height: 100vh !important;\n          }\n          .hero-section h1 {\n            font-size: 2.5rem !important;\n            line-height: 1.2 !important;\n          }\n          .hero-section .bg-white\\\\/10 {\n            padding: 1.5rem !important;\n            margin-bottom: 2rem !important;\n          }\n        }\n\n\n        /* Animated RSVP Button */\n        .animated-rsvp-btn {\n          font-family: Arial, Helvetica, sans-serif;\n          font-weight: bold;\n          color: hsl(var(--gold));\n          background-color: hsl(var(--dark-green));\n          padding: 1em 2em;\n          border: none;\n          border-radius: .6rem;\n          position: relative;\n          cursor: pointer;\n          overflow: hidden;\n        }\n\n        .animated-rsvp-btn span:not(:nth-child(6)) {\n          position: absolute;\n          left: 50%;\n          top: 50%;\n          transform: translate(-50%, -50%);\n          height: 30px;\n          width: 30px;\n          background-color: hsl(var(--primary));\n          border-radius: 50%;\n          transition: .6s ease;\n        }\n\n        .animated-rsvp-btn span:nth-child(6) {\n          position: relative;\n        }\n\n        .animated-rsvp-btn span:nth-child(1) {\n          transform: translate(-3.3em, -4em);\n        }\n\n        .animated-rsvp-btn span:nth-child(2) {\n          transform: translate(-6em, 1.3em);\n        }\n\n        .animated-rsvp-btn span:nth-child(3) {\n          transform: translate(-.2em, 1.8em);\n        }\n\n        .animated-rsvp-btn span:nth-child(4) {\n          transform: translate(3.5em, 1.4em);\n        }\n\n        .animated-rsvp-btn span:nth-child(5) {\n          transform: translate(3.5em, -3.8em);\n        }\n\n        .animated-rsvp-btn:hover span:not(:nth-child(6)) {\n          transform: translate(-50%, -50%) scale(4);\n          transition: 1.5s ease;\n        }\n\n        .animated-rsvp-btn:hover,\n        .animated-rsvp-btn:active {\n          background-color: hsl(var(--gold));\n          color: hsl(var(--dark-green));\n          transition: all 0.3s ease;\n        }\n\n        /* Custom underscore cursor for TypeAnimation */\n        .typewriter-text .react-type-animation-cursor {\n          color: hsl(var(--foreground));\n          animation: blink 1.2s infinite;\n        }\n\n        .typewriter-text .react-type-animation-cursor::after {\n          content: '_';\n          font-weight: bold;\n        }\n\n        @keyframes blink {\n          0%, 50% { opacity: 1; }\n          51%, 100% { opacity: 0; }\n        }\n      `}</style>\n    </section>\n  );\n};\n\nexport default HeroSection;","size_bytes":8628},"client/src/components/Navigation.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Menu, X } from 'lucide-react';\n\nimport fd0f1b60_08ec_408e_9985_4998bb554d88 from \"@assets/fd0f1b60-08ec-408e-9985-4998bb554d88.png\";\n\nconst Navigation = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [activeSection, setActiveSection] = useState('');\n  const [isVisible, setIsVisible] = useState(false);\n\n  const navItems = [\n    { name: 'Our Moments', href: '#slideshow' },\n    { name: 'Countdown', href: '#countdown' },\n    { name: 'Our Story', href: '#story' },\n    { name: 'Timeline', href: '#timeline' },\n    { name: 'Venue', href: '#venue' },\n    { name: 'Dress Code', href: '#dresscode' },\n    { name: 'Prenup Photos', href: '#prenup-photos' },\n    { name: 'RSVP', href: '#rsvp' }\n  ];\n\n  useEffect(() => {\n    const handleScroll = () => {\n      // Show/hide navigation based on scroll - only show when scrolling starts\n      if (window.scrollY > 100) {\n        setIsVisible(true);\n      } else {\n        // Hide navigation when at the top\n        setIsVisible(false);\n      }\n\n      // Update active section\n      const sections = navItems.map(item => item.href.slice(1));\n      const currentSection = sections.find(section => {\n        const element = document.getElementById(section);\n        if (element) {\n          const rect = element.getBoundingClientRect();\n          return rect.top <= 100 && rect.bottom >= 100;\n        }\n        return false;\n      });\n      \n      if (currentSection) {\n        setActiveSection(currentSection);\n      }\n    };\n\n    // Don't show navigation immediately when component mounts\n    setIsVisible(false);\n    \n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const scrollToSection = (href: string) => {\n    const sectionId = href.slice(1); // Remove the # from the href\n    const element = document.getElementById(sectionId);\n    \n    if (element) {\n      // Calculate the offset for the fixed navigation\n      const navHeight = 64; // Approximate navigation height\n      const elementTop = element.offsetTop - navHeight;\n      \n      // Smooth scroll to the element\n      window.scrollTo({\n        top: Math.max(0, elementTop),\n        behavior: 'smooth'\n      });\n    } else {\n      // Fallback: try querySelector if getElementById fails\n      const fallbackElement = document.querySelector(href);\n      if (fallbackElement) {\n        const navHeight = 64;\n        const rect = fallbackElement.getBoundingClientRect();\n        const elementTop = rect.top + window.pageYOffset - navHeight;\n        \n        window.scrollTo({\n          top: Math.max(0, elementTop),\n          behavior: 'smooth'\n        });\n      } else {\n        // If element is not found, scroll to top\n        console.warn(`Section ${sectionId} not found`);\n        window.scrollTo({\n          top: 0,\n          behavior: 'smooth'\n        });\n      }\n    }\n    setIsOpen(false);\n  };\n\n  return (\n    <nav className={`fixed top-0 left-0 right-0 z-50 bg-background/90 backdrop-blur-md border-b border-border shadow-soft transition-all duration-300 ${\n      isVisible ? 'translate-y-0' : '-translate-y-full'\n    }`}>\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* Logo */}\n          <div className=\"flex-shrink-0\">\n            <img \n              src={fd0f1b60_08ec_408e_9985_4998bb554d88} \n              alt=\"Paula & Rafael Logo\" \n              className=\"w-10 h-10 rounded-full\"\n            />\n          </div>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:block\">\n            <div className=\"flex items-center space-x-1\">\n              {navItems.map((item) => (\n                <button\n                  key={item.name}\n                  onClick={() => scrollToSection(item.href)}\n                  className={`px-4 py-2 text-sm font-medium rounded-lg transition-all duration-300 hover:bg-primary/10 hover:text-primary ${\n                    activeSection === item.href.slice(1)\n                      ? 'text-primary bg-primary/5'\n                      : 'text-foreground'\n                  }`}\n                >\n                  {item.name}\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Mobile menu button */}\n          <div className=\"md:hidden\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setIsOpen(!isOpen)}\n              className=\"text-foreground hover:bg-primary/10\"\n            >\n              {isOpen ? <X className=\"h-5 w-5\" /> : <Menu className=\"h-5 w-5\" />}\n            </Button>\n          </div>\n        </div>\n      </div>\n      {/* Mobile Navigation */}\n      {isOpen && (\n        <div className=\"md:hidden\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1 bg-background/90 backdrop-blur-md border-b border-border\">\n            {navItems.map((item) => (\n              <button\n                key={item.name}\n                onClick={() => scrollToSection(item.href)}\n                className={`block w-full text-left px-3 py-2 text-base font-medium rounded-md transition-all duration-300 hover:bg-primary/10 hover:text-primary ${\n                  activeSection === item.href.slice(1)\n                    ? 'text-primary bg-primary/5'\n                    : 'text-foreground'\n                }`}\n              >\n                {item.name}\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n};\n\nexport default Navigation;","size_bytes":5640},"client/src/components/RSVPSection.tsx":{"content":"import { Button } from '@/components/ui/button';\nimport { Calendar } from 'lucide-react';\nimport { motion } from 'framer-motion';\nimport { useAnimationContext } from '@/contexts/AnimationContext';\nimport BotanicalLayer from '@/components/BotanicalLayer';\nimport whitePeonies from '@assets/1_1758357477982.png';\nimport whiteFlower from '@assets/2_1758357477983.png';\nimport coralTulips from '@assets/5_1758357477984.png';\nimport yellowDaisy from '@assets/6_1758357477985.png';\nimport delicateBranch from '@assets/4_1758357477984.png';\n\nconst RSVPSection = () => {\n  const { animationsEnabled } = useAnimationContext();\n  return (\n    <motion.section \n      id=\"rsvp\" \n      className=\"section-pastel-blue py-20 px-4 relative overflow-hidden\"\n      initial={animationsEnabled ? { opacity: 0 } : { opacity: 1 }}\n      animate={{ opacity: 1 }}\n      transition={animationsEnabled ? { duration: 1, delay: 10.5 } : { duration: 0 }}\n    >\n      {/* Background Elements */}\n      <div className=\"absolute inset-0 opacity-10\">\n        <div className=\"absolute top-0 right-0 w-96 h-96 border border-[#333333] rounded-full transform translate-x-1/3 -translate-y-1/3\"></div>\n        <div className=\"absolute bottom-0 left-0 w-96 h-96 border border-[#333333] rounded-full transform -translate-x-1/3 translate-y-1/3\"></div>\n      </div>\n      <div className=\"max-w-4xl mx-auto text-center relative z-10\">\n        {/* Section Header */}\n        <motion.div \n          className=\"mb-16\"\n          initial={animationsEnabled ? { opacity: 0, y: 30 } : { opacity: 1, y: 0 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={animationsEnabled ? { duration: 0.8, ease: \"easeOut\", delay: 10.8 } : { duration: 0 }}\n        >\n          <h2 className=\"text-5xl font-script italic font-black text-primary mb-8\" data-testid=\"text-rsvp-title\">\n            Please RSVP\n          </h2>\n        </motion.div>\n\n        {/* Main RSVP Content */}\n        <motion.div \n          className=\"mb-12 relative\"\n          initial={animationsEnabled ? { opacity: 0, y: 30 } : { opacity: 1, y: 0 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={animationsEnabled ? { duration: 0.8, ease: \"easeOut\", delay: 11.1 } : { duration: 0 }}\n        >\n          {/* Floral Flourishes Around RSVP Card */}\n          <BotanicalLayer\n            src={whitePeonies}\n            alt=\"\"\n            testId=\"rsvp-white-peonies-top-left\"\n            top=\"-20px\"\n            left=\"-20px\"\n            width=\"60px\"\n            height=\"auto\"\n            opacity={0.4}\n            zIndex={1}\n            rotate={15}\n            variant=\"idleFloat\"\n            delay={2.5}\n            className=\"filter drop-shadow-lg\"\n            ariaHidden={true}\n          />\n          \n          <BotanicalLayer\n            src={whiteFlower}\n            alt=\"\"\n            testId=\"rsvp-white-flower-top-right\"\n            top=\"-15px\"\n            right=\"-25px\"\n            width=\"55px\"\n            height=\"auto\"\n            opacity={0.45}\n            zIndex={1}\n            rotate={-20}\n            variant=\"idleFloat\"\n            delay={3.0}\n            className=\"filter drop-shadow-lg\"\n            ariaHidden={true}\n          />\n          \n          <BotanicalLayer\n            src={coralTulips}\n            alt=\"\"\n            testId=\"rsvp-coral-tulips-bottom-left\"\n            bottom=\"-25px\"\n            left=\"-15px\"\n            width=\"50px\"\n            height=\"auto\"\n            opacity={0.4}\n            zIndex={1}\n            rotate={25}\n            variant=\"idleFloat\"\n            delay={2.8}\n            className=\"filter drop-shadow-lg\"\n            ariaHidden={true}\n          />\n          \n          <BotanicalLayer\n            src={yellowDaisy}\n            alt=\"\"\n            testId=\"rsvp-yellow-daisy-bottom-right\"\n            bottom=\"-20px\"\n            right=\"-18px\"\n            width=\"45px\"\n            height=\"auto\"\n            opacity={0.5}\n            zIndex={1}\n            rotate={-15}\n            variant=\"idleFloat\"\n            delay={2.2}\n            className=\"filter drop-shadow-lg\"\n            ariaHidden={true}\n          />\n          \n          <div className=\"bg-card/30 border border-border rounded-xl p-12 shadow-soft hover-elegant relative z-10\">\n            {/* RSVP Deadline */}\n            <div className=\"text-center mb-8\">\n              <div className=\"inline-flex items-center justify-center w-16 h-16 bg-primary/10 rounded-full mb-4\">\n                <Calendar className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-display font-semibold text-primary mb-2\">RSVP Deadline</h3>\n              <p className=\"text-lg text-muted-foreground\">September 25, 2025</p>\n            </div>\n\n            {/* RSVP Message */}\n            <div className=\"space-y-6 mb-8\">\n              <p className=\"text-xl font-script italic text-primary leading-relaxed\" data-testid=\"text-rsvp-message\">\n                Your presence would make our day complete\n              </p>\n              <p className=\"text-xl font-script italic text-primary leading-relaxed\" data-testid=\"text-rsvp-details\">\n                Please confirm your attendance by clicking the button below. \n                We're excited to celebrate this special moment with you!\n              </p>\n            </div>\n\n            {/* RSVP Button */}\n            <Button\n              asChild\n              size=\"lg\"\n              className=\"group relative px-16 py-6 text-lg font-script font-medium tracking-wide bg-primary hover:bg-primary/80 text-primary-foreground shadow-lg transition-all duration-300 border-2 border-primary overflow-hidden rounded-lg\"\n              data-testid=\"button-rsvp\"\n            >\n              <a \n                href=\"https://ejkrizzarsvp.replit.app\" \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"relative inline-flex items-center justify-center w-full h-full z-10\"\n              >\n                <span className=\"relative z-10 font-script italic\">RSVP Now</span>\n                <div className=\"absolute inset-0 from-transparent via-primary-foreground/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500 transform skew-x-12 group-hover:animate-pulse bg-primary-foreground/10\"></div>\n              </a>\n            </Button>\n\n            {/* Botanical Decorative Elements */}\n            <div className=\"mt-8 flex justify-center items-center space-x-6\">\n              <div className=\"w-12 h-px bg-primary/30\"></div>\n              \n              <BotanicalLayer\n                src={delicateBranch}\n                alt=\"\"\n                testId=\"rsvp-decorative-branch\"\n                width=\"24px\"\n                height=\"auto\"\n                opacity={0.6}\n                zIndex={1}\n                rotate={0}\n                variant=\"idleFloat\"\n                delay={3.5}\n                className=\"filter drop-shadow-lg relative\"\n                ariaHidden={true}\n              />\n              \n              <div className=\"w-12 h-px bg-primary/30\"></div>\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Additional Info */}\n        <motion.div \n          className=\"text-center max-w-2xl mx-auto\"\n          initial={animationsEnabled ? { opacity: 0, y: 30 } : { opacity: 1, y: 0 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={animationsEnabled ? { duration: 0.8, ease: \"easeOut\", delay: 11.4 } : { duration: 0 }}\n        >\n          <p className=\"text-muted-foreground text-lg leading-relaxed\">\n            Can't wait to celebrate with you! If you have any questions or special dietary requirements, please let us know when you RSVP.\n          </p>\n        </motion.div>\n      </div>\n    </motion.section>\n  );\n};\n\nexport default RSVPSection;","size_bytes":7788},"client/src/components/StorySection.tsx":{"content":"import { useEffect, useRef, useState } from 'react';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\nimport { motion } from 'framer-motion';\nimport { useAnimationContext } from '@/contexts/AnimationContext';\nimport { Star, Compass, Globe, Heart } from 'lucide-react';\nimport firstImage from '@assets/OURStory1ST-IMAGE_1758344796892.png';\nimport proposalImage from '@assets/OurStory2ND-IMAGE_1758344796891.jpg';\nimport midImage from '@assets/OurStory3RD-IMAGE_1758344796893.jpg';\nimport loopImage from '@assets/OurStory4TH-IMAGE_1758344796892.png';\nimport newDistanceImage from '@assets/ourStorys_1758352683598.jpg';\nimport botanicalLeaf from '@assets/1_1758357477982.png';\nimport pinkFlowers from '@assets/7_1758357477985.png';\nimport delicateBranch from '@assets/4_1758357477984.png';\nimport yellowDaisy from '@assets/6_1758357477985.png';\n\n// Register GSAP plugin\ngsap.registerPlugin(ScrollTrigger);\n\nconst StorySection = () => {\n  const { animationsEnabled } = useAnimationContext();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const horizontalRef = useRef<HTMLDivElement>(null);\n  const botanicalRefs = useRef<HTMLImageElement[]>([]);\n  const [mousePosition, setMousePosition] = useState<{ [key: number]: { x: number; y: number } }>({});\n  const [isMobile, setIsMobile] = useState(false);\n\n  // Detect mobile viewport\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    \n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    \n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n\n  const getStoryIcon = (cardId: number) => {\n    switch (cardId) {\n      case 1: return <Star className=\"w-6 h-6 sm:w-7 sm:h-7 md:w-8 md:h-8\" />;\n      case 2: return <Compass className=\"w-6 h-6 sm:w-7 sm:h-7 md:w-8 md:h-8\" />;\n      case 3: return <Globe className=\"w-6 h-6 sm:w-7 sm:h-7 md:w-8 md:h-8\" />;\n      case 4: return <Heart className=\"w-6 h-6 sm:w-7 sm:h-7 md:w-8 md:h-8\" />;\n      default: return <Star className=\"w-6 h-6 sm:w-7 sm:h-7 md:w-8 md:h-8\" />;\n    }\n  };\n\n  const storyCards = [\n    {\n      id: 1,\n      title: \"Their Beginnings\",\n      text: \"Paula, born in 1991, grew up surrounded by family, values, and determination. She focused on her career, not searching for love. Rafael, born in 1989, was the youngest of four, raised with independence and the belief in working hard for his dreams.\",\n      images: [proposalImage, firstImage]\n    },\n    {\n      id: 2, \n      title: \"Paths Crossed\",\n      text: \"In 2019, their paths crossed at a training center‚ÄîPaula, serious and focused, and Rafael, confident with a smile that refused to fade. What began as annoyance slowly grew into something meaningful.\",\n      image: midImage\n    },\n    {\n      id: 3,\n      title: \"Distance & Connection\",\n      text: \"Then the pandemic struck. Separated by sea and distance, Rafael reached out with a simple message. That small connection turned into daily conversations, sharing hopes and lives despite challenges and long distance.\",\n      image: newDistanceImage\n    },\n    {\n      id: 4,\n      title: \"Choosing Each Other\",\n      text: \"Through misunderstandings and missed moments, they always found their way back. Rafael's steady presence and Paula's unstoppable drive showed them that love is not about ease‚Äîit's about choosing each other. Now, four years later, they stand together, hand in hand, proving that their story is one of patience, faith, and love chosen again and again.\",\n      image: loopImage\n    }\n  ];\n\n  useEffect(() => {\n    const container = containerRef.current;\n    const horizontal = horizontalRef.current;\n\n    if (!container || !horizontal) return;\n\n    let scrollTriggerInstance: gsap.plugins.ScrollTriggerInstance | null = null;\n    let horizontalScrollTween: gsap.core.Tween | null = null;\n\n    // Only create horizontal scroll animations when animations are enabled AND not mobile\n    const shouldHorizontal = animationsEnabled && !isMobile;\n    if (shouldHorizontal) {\n      // Create horizontal scrolling animation with dynamic width calculation\n      horizontalScrollTween = gsap.to(horizontal, {\n        x: () => -(horizontal.scrollWidth - container.offsetWidth),\n        ease: \"none\",\n      });\n\n      // Create ScrollTrigger with dynamic end calculation  \n      scrollTriggerInstance = ScrollTrigger.create({\n        trigger: container,\n        start: \"top top\",\n        end: () => `+=${horizontal.scrollWidth - container.offsetWidth}`,\n        pin: true,\n        scrub: 1,\n        animation: horizontalScrollTween,\n        invalidateOnRefresh: true,\n        anticipatePin: 1,\n      });\n\n      // Refresh ScrollTrigger after images and fonts load\n      const handleRefresh = () => {\n        ScrollTrigger.refresh();\n      };\n\n      // Add load listener for window to refresh after fonts and lazy images\n      window.addEventListener('load', handleRefresh);\n\n      // Add load listeners to all images to refresh after each image loads\n      const images = horizontal.querySelectorAll('img');\n      images.forEach(img => {\n        if (!img.complete) {\n          img.addEventListener('load', handleRefresh, { once: true });\n        }\n      });\n\n      // Initial refresh to handle any already loaded content\n      setTimeout(() => {\n        ScrollTrigger.refresh();\n      }, 100);\n\n      // Add botanical parallax animations with correct math\n      if (botanicalRefs.current.length > 0) {\n        botanicalRefs.current.forEach((element, index) => {\n          if (element) {\n            const parallaxFactors = [0.6, 0.75, 0.85, 0.95]; // Slower than main content\n            const factor = parallaxFactors[index] || 0.8;\n            gsap.to(element, {\n              x: () => -(horizontal.scrollWidth - container.offsetWidth) * (factor - 1), // Live dimensions for refresh behavior\n              ease: \"none\",\n              scrollTrigger: {\n                trigger: container,\n                start: \"top top\",\n                end: () => `+=${horizontal.scrollWidth - container.offsetWidth}`,\n                scrub: 1,\n                invalidateOnRefresh: true,\n              }\n            });\n          }\n        });\n      }\n\n      // Only animate story cards on load if animations are enabled\n      gsap.fromTo(\".story-card\", {\n        opacity: 0,\n        y: 50,\n        scale: 0.9\n      }, {\n        opacity: 1,\n        y: 0,\n        scale: 1,\n        duration: 0.8,\n        stagger: 0.2,\n        ease: \"power2.out\",\n        scrollTrigger: {\n          trigger: \".story-card\",\n          start: \"top 80%\",\n        }\n      });\n\n      // Cleanup function for animations enabled\n      return () => {\n        window.removeEventListener('load', handleRefresh);\n        const images = horizontal.querySelectorAll('img');\n        images.forEach(img => {\n          img.removeEventListener('load', handleRefresh);\n        });\n        // Clean up specific instances to prevent leaks\n        if (scrollTriggerInstance) scrollTriggerInstance.kill();\n        if (horizontalScrollTween) horizontalScrollTween.kill();\n        // Only kill ScrollTriggers that belong to this container to avoid affecting other sections\n        ScrollTrigger.getAll().filter(st => st.trigger === container).forEach(st => st.kill());\n      };\n    } else {\n      // When animations are disabled, provide static layout\n      // No horizontal scroll, no parallax, just static content\n      return () => {\n        // Minimal cleanup for static mode\n        ScrollTrigger.getAll().forEach(st => st.kill());\n      };\n    }\n  }, [animationsEnabled, isMobile]);\n\n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>, cardId: number) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    \n    setMousePosition(prev => ({\n      ...prev,\n      [cardId]: { x, y }\n    }));\n  };\n\n  const handleMouseLeave = (cardId: number) => {\n    setMousePosition(prev => {\n      const newPosition = { ...prev };\n      delete newPosition[cardId];\n      return newPosition;\n    });\n  };\n\n  return (\n    <motion.section \n      id=\"story\" \n      className=\"section-hard-blue relative\"\n      initial={animationsEnabled ? { opacity: 0 } : { opacity: 1 }}\n      animate={{ opacity: 1 }}\n      transition={animationsEnabled ? { duration: 1, delay: 3.5 } : { duration: 0 }}\n    >\n      {/* Header */}\n      <div className=\"text-center py-16 sm:py-20 px-4 relative z-10\">\n        <motion.div\n          initial={animationsEnabled ? { opacity: 0, y: 30 } : { opacity: 1, y: 0 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={animationsEnabled ? { duration: 0.8, ease: \"easeOut\", delay: 3.8 } : { duration: 0 }}\n        >\n          <h2 className=\"text-4xl sm:text-5xl font-script italic font-black text-primary-foreground mb-6 sm:mb-8\" data-testid=\"text-story-title\">\n            Our Story\n          </h2>\n          <p className=\"text-base sm:text-lg text-primary-foreground max-w-2xl mx-auto mb-4\">\n            {animationsEnabled \n              ? \"Scroll vertically to journey through our love story horizontally\"\n              : \"Our journey together\"\n            }\n          </p>\n          \n          {/* SVG Arrow Indicator - Only show for horizontal scroll */}\n          {animationsEnabled && (\n            <div className=\"flex items-center justify-center space-x-4 mt-6 sm:mt-8\">\n              <svg className=\"w-5 h-5 sm:w-6 sm:h-6 text-primary-foreground animate-bounce\" viewBox=\"0 0 24 24\">\n                <path fill=\"currentColor\" d=\"M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z\"/>\n              </svg>\n              <span className=\"text-xs sm:text-sm text-primary-foreground\">Scroll down</span>\n              <svg className=\"w-5 h-5 sm:w-6 sm:h-6 text-primary-foreground animate-pulse\" viewBox=\"0 0 24 24\">\n                <path fill=\"currentColor\" d=\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\"/>\n              </svg>\n            </div>\n          )}\n        </motion.div>\n      </div>\n      {/* Story Content Container */}\n      {animationsEnabled && !isMobile ? (\n        /* Horizontal Scrolling Container */\n        <div \n          ref={containerRef} \n          className=\"relative overflow-x-hidden overflow-y-visible\"\n          style={{ height: '100vh' }}\n        >\n          <div \n            ref={horizontalRef}\n            className=\"flex h-full items-center relative\"\n            style={{ width: `${storyCards.length * 100 + 100}vw` }}\n          >\n          {/* Botanical Background Layer */}\n          <div className=\"absolute inset-0 z-0\">\n            <img\n              ref={el => el && (botanicalRefs.current[0] = el)}\n              src={botanicalLeaf}\n              alt=\"\"\n              className=\"absolute top-[10%] left-[5%] w-24 md:w-32 opacity-25 pointer-events-none\"\n              style={{ filter: 'drop-shadow(2px 2px 4px rgba(0,0,0,0.3))', willChange: 'transform' }}\n              aria-hidden=\"true\"\n              loading=\"lazy\"\n              decoding=\"async\"\n              data-testid=\"story-botanical-leaf-1\"\n            />\n            <img\n              ref={el => el && (botanicalRefs.current[1] = el)}\n              src={pinkFlowers}\n              alt=\"\"\n              className=\"absolute bottom-[15%] right-[10%] w-20 md:w-28 opacity-20 pointer-events-none\"\n              style={{ filter: 'drop-shadow(2px 2px 4px rgba(0,0,0,0.3))', willChange: 'transform' }}\n              aria-hidden=\"true\"\n              loading=\"lazy\"\n              decoding=\"async\"\n              data-testid=\"story-botanical-pink-flowers\"\n            />\n            <img\n              ref={el => el && (botanicalRefs.current[2] = el)}\n              src={delicateBranch}\n              alt=\"\"\n              className=\"absolute top-[60%] left-[15%] w-32 md:w-40 opacity-30 pointer-events-none\"\n              style={{ filter: 'drop-shadow(2px 2px 4px rgba(0,0,0,0.3))', willChange: 'transform' }}\n              aria-hidden=\"true\"\n              loading=\"lazy\"\n              decoding=\"async\"\n              data-testid=\"story-botanical-branch\"\n            />\n            <img\n              ref={el => el && (botanicalRefs.current[3] = el)}\n              src={yellowDaisy}\n              alt=\"\"\n              className=\"absolute top-[20%] right-[20%] w-16 md:w-20 opacity-25 pointer-events-none\"\n              style={{ filter: 'drop-shadow(2px 2px 4px rgba(0,0,0,0.3))', willChange: 'transform' }}\n              aria-hidden=\"true\"\n              loading=\"lazy\"\n              decoding=\"async\"\n              data-testid=\"story-botanical-daisy\"\n            />\n          </div>\n\n          {/* Story Cards */}\n          {storyCards.map((card, index) => (\n            <div\n              key={card.id}\n              className=\"story-card flex-shrink-0 w-screen h-full flex items-center justify-center px-4 sm:px-8 py-8 sm:py-12 relative z-10\"\n            >\n              <div \n                className=\"max-w-6xl mx-auto grid lg:grid-cols-2 gap-8 lg:gap-16 items-center h-full relative overflow-hidden rounded-3xl p-8 transition-all duration-300 bg-black/5 dark:bg-white/5 border border-white/10 backdrop-blur-sm\"\n                style={{\n                  background: mousePosition[card.id] \n                    ? `radial-gradient(600px circle at ${mousePosition[card.id].x}px ${mousePosition[card.id].y}px, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.02) 40%), rgba(0, 0, 0, 0.05)`\n                    : 'rgba(0, 0, 0, 0.05)'\n                }}\n                onMouseMove={(e) => handleMouseMove(e, card.id)}\n                onMouseLeave={() => handleMouseLeave(card.id)}\n                data-testid={`card-story-${card.id}`}\n              >\n                {/* Content */}\n                <div className={`space-y-6 sm:space-y-8 ${index % 2 === 1 ? 'lg:order-2' : ''}`}>\n                  <div className=\"inline-flex items-center justify-center w-12 h-12 sm:w-14 sm:h-14 md:w-16 md:h-16 rounded-full mb-4 sm:mb-6 text-primary bg-[#024b30]\">\n                    {getStoryIcon(card.id)}\n                  </div>\n                  \n                  <h3 className=\"text-3xl sm:text-4xl lg:text-5xl font-script italic text-primary-foreground mb-4 sm:mb-6\" data-testid={`text-story-card-${card.id}-title`}>\n                    {card.title}\n                  </h3>\n                  \n                  <p className=\"text-lg sm:text-xl text-primary-foreground leading-relaxed\" data-testid={`text-story-card-${card.id}-text`}>\n                    {card.text}\n                  </p>\n\n                  {/* SVG Decorative Element */}\n                  <div className=\"flex items-center space-x-4 pt-4 sm:pt-6\">\n                    <div className=\"w-12 sm:w-16 h-px bg-primary-foreground/60\"></div>\n                    <svg className=\"w-3 h-3 sm:w-4 sm:h-4 text-primary-foreground/70\" viewBox=\"0 0 24 24\">\n                      <path fill=\"currentColor\" d=\"M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5 C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.04L12,21.35Z\"/>\n                    </svg>\n                    <div className=\"w-12 sm:w-16 h-px bg-primary-foreground/60\"></div>\n                  </div>\n                </div>\n\n                {/* Image */}\n                <div className={`relative ${index % 2 === 1 ? 'lg:order-1' : ''}`}>\n                  <div className=\"aspect-[4/5] sm:aspect-square max-w-[85vw] sm:max-w-sm md:max-w-md mx-auto relative\">\n                    {/* Handle multiple images for \"Their Beginnings\" or single image for others */}\n                    {card.images ? (\n                      // Multiple images side by side for \"Their Beginnings\"\n                      (<div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2 w-full h-full\">\n                        {card.images.map((image, imgIndex) => (\n                          <img\n                            key={imgIndex}\n                            src={image}\n                            alt={`Story moment ${index + 1} - ${imgIndex + 1}`}\n                            className=\"w-full h-full object-cover object-[50%_20%] rounded-2xl shadow-lg aspect-[4/5] sm:aspect-square\"\n                            data-testid={`img-story-card-${card.id}-${imgIndex + 1}`}\n                          />\n                        ))}\n                      </div>)\n                    ) : (\n                      // Single image for other cards\n                      (<img\n                        src={card.image}\n                        alt={`Story moment ${index + 1}`}\n                        className=\"w-full h-full object-cover object-[50%_20%] rounded-2xl shadow-lg\"\n                        data-testid={`img-story-card-${card.id}`}\n                      />)\n                    )}\n\n                    {/* Floating decorative elements */}\n                    <div className=\"absolute -top-2 sm:-top-4 -right-2 sm:-right-4\">\n                      <svg className=\"w-6 h-6 sm:w-8 sm:h-8 text-primary-foreground/70 animate-spin\" style={{ animationDuration: '10s' }} viewBox=\"0 0 24 24\">\n                        <path fill=\"currentColor\" d=\"M12,2L13.09,8.26L22,9L13.09,9.74L12,16L10.91,9.74L2,9L10.91,8.26L12,2Z\"/>\n                      </svg>\n                    </div>\n\n                    <div className=\"absolute -bottom-1 sm:-bottom-2 -left-1 sm:-left-2\">\n                      <svg className=\"w-4 h-4 sm:w-6 sm:h-6 text-primary-foreground/60 animate-pulse\" viewBox=\"0 0 24 24\">\n                        <path fill=\"currentColor\" d=\"M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5 C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.04L12,21.35Z\"/>\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n\n          {/* Final \"The Vow\" Section */}\n          <div className=\"story-card flex-shrink-0 w-screen h-full flex items-center justify-center px-4 sm:px-8 py-8 sm:py-12\">\n            <div className=\"max-w-4xl mx-auto text-center relative\">\n              {/* Background SVG */}\n              <svg className=\"absolute inset-0 w-full h-full opacity-10\" viewBox=\"0 0 800 600\">\n                <defs>\n                  <radialGradient id=\"vowGradient\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                    <stop offset=\"0%\" stopColor=\"hsl(var(--primary-foreground))\" stopOpacity=\"0.3\"/>\n                    <stop offset=\"100%\" stopColor=\"hsl(var(--primary-foreground))\" stopOpacity=\"0\"/>\n                  </radialGradient>\n                </defs>\n                <circle cx=\"400\" cy=\"300\" r=\"250\" fill=\"url(#vowGradient)\"/>\n                \n                {/* Decorative hearts */}\n                <g className=\"animate-pulse\">\n                  <path d=\"M200,150 C200,140 185,130 175,140 C165,130 155,140 155,150 C155,160 175,180 200,200 C225,180 245,160 245,150 C245,140 235,130 225,140 C215,130 200,140 200,150 Z\" \n                        fill=\"hsl(var(--primary-foreground))\" opacity=\"0.2\"/>\n                  <path d=\"M600,450 C600,440 585,430 575,440 C565,430 555,440 555,450 C555,460 575,480 600,500 C625,480 645,460 645,450 C645,440 635,430 625,440 C615,430 600,440 600,450 Z\" \n                        fill=\"hsl(var(--primary-foreground))\" opacity=\"0.2\"/>\n                </g>\n              </svg>\n\n              <div className=\"relative z-10 space-y-6 sm:space-y-8\">\n                <h3 className=\"text-4xl sm:text-5xl md:text-6xl font-script italic font-black text-primary-foreground mb-6 sm:mb-8\" data-testid=\"text-story-vow-title\">\n                  The Vow\n                </h3>\n                \n                <div className=\"max-w-2xl mx-auto\">\n                  <p className=\"text-xl sm:text-2xl text-primary-foreground leading-relaxed italic\">\n                    \"To love, to cherish, and to build a beautiful life together‚Äîthis is our promise, today and always.\"\n                  </p>\n                </div>\n                \n                {/* SVG Hearts decoration */}\n                <div className=\"flex justify-center items-center space-x-4 sm:space-x-6 mt-8 sm:mt-12\">\n                  <svg className=\"w-5 h-5 sm:w-6 sm:h-6 text-primary-foreground animate-pulse\" viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5 C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.04L12,21.35Z\"/>\n                  </svg>\n                  <div className=\"w-16 sm:w-24 h-px bg-primary-foreground/60\"></div>\n                  <svg className=\"w-6 h-6 sm:w-8 sm:h-8 text-primary-foreground animate-pulse\" viewBox=\"0 0 24 24\" style={{ animationDelay: '0.5s' }}>\n                    <path fill=\"currentColor\" d=\"M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5 C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.04L12,21.35Z\"/>\n                  </svg>\n                  <div className=\"w-16 sm:w-24 h-px bg-primary-foreground/60\"></div>\n                  <svg className=\"w-5 h-5 sm:w-6 sm:h-6 text-primary-foreground animate-pulse\" viewBox=\"0 0 24 24\" style={{ animationDelay: '1s' }}>\n                    <path fill=\"currentColor\" d=\"M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5 C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.04L12,21.35Z\"/>\n                  </svg>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Close horizontal scroll containers */}\n          </div>\n        </div>\n      ) : (\n        /* Static vertical layout - duplicate the story cards without horizontal scroll */\n        <>\n          {/* Static Botanical Background */}\n          <div className=\"absolute inset-0 z-0 pointer-events-none\">\n            <img\n              src={botanicalLeaf}\n              alt=\"\"\n              className=\"absolute top-[10%] left-[5%] w-24 md:w-32 opacity-25\"\n              style={{ filter: 'drop-shadow(2px 2px 4px rgba(0,0,0,0.3))' }}\n              aria-hidden=\"true\"\n              loading=\"lazy\"\n              decoding=\"async\"\n              data-testid=\"story-botanical-leaf-static\"\n            />\n            <img\n              src={pinkFlowers}\n              alt=\"\"\n              className=\"absolute bottom-[15%] right-[10%] w-20 md:w-28 opacity-20\"\n              style={{ filter: 'drop-shadow(2px 2px 4px rgba(0,0,0,0.3))' }}\n              aria-hidden=\"true\"\n              loading=\"lazy\"\n              decoding=\"async\"\n              data-testid=\"story-botanical-flowers-static\"\n            />\n          </div>\n          \n          {/* Static Story Cards */}\n          {storyCards.map((card, index) => (\n            <div\n              key={card.id}\n              className=\"story-card py-12 px-4 relative z-10\"\n            >\n              <div className=\"max-w-6xl mx-auto grid lg:grid-cols-2 gap-8 lg:gap-16 items-center relative overflow-hidden rounded-3xl p-8 bg-black/5 dark:bg-white/5 border border-white/10 backdrop-blur-sm\">\n                {/* Same content structure as horizontal cards */}\n                <div className={`space-y-6 sm:space-y-8 ${index % 2 === 1 ? 'lg:order-2' : ''}`}>\n                  <div className=\"inline-flex items-center justify-center w-12 h-12 sm:w-14 sm:h-14 md:w-16 md:h-16 rounded-full mb-4 sm:mb-6 text-primary bg-[#024b30]\">\n                    {getStoryIcon(card.id)}\n                  </div>\n                  \n                  <h3 className=\"text-3xl sm:text-4xl lg:text-5xl font-script italic text-primary-foreground mb-4 sm:mb-6\" data-testid={`text-story-card-static-${card.id}-title`}>\n                    {card.title}\n                  </h3>\n                  \n                  <p className=\"text-lg sm:text-xl text-primary-foreground leading-relaxed\" data-testid={`text-story-card-static-${card.id}-text`}>\n                    {card.text}\n                  </p>\n\n                  <div className=\"flex items-center space-x-4 pt-4 sm:pt-6\">\n                    <div className=\"w-12 sm:w-16 h-px bg-primary-foreground/60\"></div>\n                    <svg className=\"w-3 h-3 sm:w-4 sm:h-4 text-primary-foreground/70\" viewBox=\"0 0 24 24\">\n                      <path fill=\"currentColor\" d=\"M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5 C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.04L12,21.35Z\"/>\n                    </svg>\n                    <div className=\"w-12 sm:w-16 h-px bg-primary-foreground/60\"></div>\n                  </div>\n                </div>\n\n                {/* Image */}\n                <div className={`relative ${index % 2 === 1 ? 'lg:order-1' : ''}`}>\n                  <div className=\"max-w-sm mx-auto relative\">\n                    {card.images ? (\n                      <div className=\"grid grid-cols-1 gap-4 w-full\">\n                        {card.images.map((image, imgIndex) => (\n                          <img\n                            key={imgIndex}\n                            src={image}\n                            alt={`Story moment ${index + 1} - ${imgIndex + 1}`}\n                            className=\"w-full h-auto rounded-2xl shadow-lg\"\n                            data-testid={`img-story-card-static-${card.id}-${imgIndex + 1}`}\n                          />\n                        ))}\n                      </div>\n                    ) : (\n                      <img\n                        src={card.image}\n                        alt={`Story moment ${index + 1}`}\n                        className=\"w-full h-auto rounded-2xl shadow-lg\"\n                        data-testid={`img-story-card-static-${card.id}`}\n                      />\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n          \n          {/* Static \"The Vow\" Section */}\n          <div className=\"py-12 px-4 relative z-10\">\n            <div className=\"max-w-4xl mx-auto text-center relative\">\n              <div className=\"space-y-6 sm:space-y-8\">\n                <h3 className=\"text-4xl sm:text-5xl md:text-6xl font-script italic font-black text-primary-foreground mb-6 sm:mb-8\" data-testid=\"text-story-vow-static-title\">\n                  The Vow\n                </h3>\n                \n                <div className=\"max-w-2xl mx-auto\">\n                  <p className=\"text-xl sm:text-2xl text-primary-foreground leading-relaxed italic\">\n                    \"To love, to cherish, and to build a beautiful life together‚Äîthis is our promise, today and always.\"\n                  </p>\n                </div>\n                \n                <div className=\"flex justify-center items-center space-x-4 sm:space-x-6 mt-8 sm:mt-12\">\n                  <svg className=\"w-5 h-5 sm:w-6 sm:h-6 text-primary-foreground\" viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5 C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.04L12,21.35Z\"/>\n                  </svg>\n                  <div className=\"w-16 sm:w-24 h-px bg-primary-foreground/60\"></div>\n                  <svg className=\"w-6 h-6 sm:w-8 sm:h-8 text-primary-foreground\" viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5 C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.04L12,21.35Z\"/>\n                  </svg>\n                  <div className=\"w-16 sm:w-24 h-px bg-primary-foreground/60\"></div>\n                  <svg className=\"w-5 h-5 sm:w-6 sm:h-6 text-primary-foreground\" viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5 C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.04L12,21.35Z\"/>\n                  </svg>\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n      \n    </motion.section>\n  );\n};\n\nexport default StorySection;","size_bytes":28299},"client/src/components/ThemeProvider.tsx":{"content":"import { createContext, useContext, useEffect, useState } from \"react\"\n\ntype Theme = \"dark\" | \"light\" | \"system\"\n\ntype ThemeProviderProps = {\n  children: React.ReactNode\n  defaultTheme?: Theme\n  storageKey?: string\n}\n\ntype ThemeProviderState = {\n  theme: Theme\n  setTheme: (theme: Theme) => void\n}\n\nconst initialState: ThemeProviderState = {\n  theme: \"system\",\n  setTheme: () => null,\n}\n\nconst ThemeProviderContext = createContext<ThemeProviderState>(initialState)\n\nexport function ThemeProvider({\n  children,\n  defaultTheme = \"system\",\n  storageKey = \"ui-theme\",\n  ...props\n}: ThemeProviderProps) {\n  const [theme, setTheme] = useState<Theme>(\n    () => (localStorage.getItem(storageKey) as Theme) || defaultTheme\n  )\n\n  useEffect(() => {\n    const root = window.document.documentElement\n\n    root.classList.remove(\"light\", \"dark\")\n\n    if (theme === \"system\") {\n      const systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\")\n        .matches\n        ? \"dark\"\n        : \"light\"\n\n      root.classList.add(systemTheme)\n      return\n    }\n\n    root.classList.add(theme)\n  }, [theme])\n\n  const value = {\n    theme,\n    setTheme: (theme: Theme) => {\n      localStorage.setItem(storageKey, theme)\n      setTheme(theme)\n    },\n  }\n\n  return (\n    <ThemeProviderContext.Provider {...props} value={value}>\n      {children}\n    </ThemeProviderContext.Provider>\n  )\n}\n\nexport const useTheme = () => {\n  const context = useContext(ThemeProviderContext)\n\n  if (context === undefined)\n    throw new Error(\"useTheme must be used within a ThemeProvider\")\n\n  return context\n}","size_bytes":1572},"client/src/components/TimelineSection.tsx":{"content":"import { Clock, Camera, Coffee, Utensils, Music, Heart } from 'lucide-react';\nimport { motion } from 'framer-motion';\nimport { useAnimationContext } from '@/contexts/AnimationContext';\n\n\n// Simple Timeline Item Component\nconst TimelineItem = ({ event, index }: { event: any; index: number }) => {\n  const { animationsEnabled } = useAnimationContext();\n  const IconComponent = event.icon;\n\n  return (\n    <motion.div \n      className=\"flex items-center justify-start mb-8\"\n      initial={animationsEnabled ? { opacity: 0, y: 20 } : { opacity: 1, y: 0 }}\n      whileInView={{ opacity: 1, y: 0 }}\n      viewport={{ once: true, amount: 0.3 }}\n      transition={animationsEnabled ? { duration: 0.6, delay: index * 0.1 } : { duration: 0 }}\n      data-testid={`item-timeline-${index}`}\n    >\n      <div className=\"flex items-center gap-4 px-2 py-2 w-full max-w-2xl\">\n        <div className=\"w-10 h-10 bg-primary/20 rounded-full flex items-center justify-center flex-shrink-0\">\n          <IconComponent className=\"w-5 h-5 text-primary\" />\n        </div>\n        <div className=\"text-xl font-display font-medium text-primary\">\n          {event.time}\n        </div>\n        <div className=\"hidden sm:block w-px h-6 bg-border mx-2\"></div>\n        <div className=\"text-lg font-body text-muted-foreground\">\n          {event.event}\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nconst TimelineSection = () => {\n  const { animationsEnabled } = useAnimationContext();\n  const timelineEvents = [\n    {\n      time: '2:15 PM',\n      event: 'Processional',\n      icon: Clock\n    },\n    {\n      time: '2:30 PM',\n      event: 'Wedding Ceremony',\n      icon: Heart\n    },\n    {\n      time: '3:30 PM',\n      event: 'Photos',\n      icon: Camera\n    },\n    {\n      time: '4:00 PM',\n      event: 'Reception',\n      icon: Utensils\n    },\n    {\n      time: '8:00 PM',\n      event: 'Party',\n      icon: Music\n    },\n    {\n      time: '10:00 PM',\n      event: 'Send-off',\n      icon: Heart\n    }\n  ];\n\n\n  return (\n    <motion.section \n      id=\"timeline\" \n      className=\"section-pastel-blue relative py-20 px-4 overflow-hidden\"\n      initial={animationsEnabled ? { opacity: 0 } : { opacity: 1 }}\n      animate={{ opacity: 1 }}\n      transition={animationsEnabled ? { duration: 0.8, ease: \"easeOut\" } : { duration: 0 }}\n    >\n      {/* Enhanced Background Decorative Elements */}\n      <div className=\"absolute top-0 left-0 w-full h-full opacity-5 pointer-events-none\">\n        <div className=\"absolute top-1/4 left-1/4 w-32 h-32 border border-[#333333] rounded-full\"></div>\n        <div className=\"absolute bottom-1/4 right-1/4 w-48 h-48 border border-[#333333] rounded-full\"></div>\n        <div className=\"absolute top-1/3 right-1/3 w-24 h-24 border-2 border-[#333333] rotate-45\"></div>\n        <div className=\"absolute bottom-1/3 left-1/5 w-16 h-16 border border-[#333333] rounded-full\"></div>\n        <div className={`absolute top-1/2 left-1/6 w-6 h-6 bg-[#333333] rounded-full ${animationsEnabled ? 'animate-pulse' : ''}`}></div>\n        <div className=\"absolute bottom-1/2 right-1/5 w-8 h-8 bg-[#333333] rotate-45\"></div>\n      </div>\n      \n      {/* Floating Elements */}\n      <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n        <div className={`absolute top-20 left-10 w-2 h-2 bg-white/20 rounded-full ${animationsEnabled ? 'animate-bounce' : ''}`} style={{animationDelay: '0s', animationDuration: '3s'}}></div>\n        <div className=\"absolute top-40 right-20 w-1 h-1 bg-white/30 rounded-full animate-bounce\" style={{animationDelay: '1s', animationDuration: '4s'}}></div>\n        <div className=\"absolute bottom-32 left-20 w-3 h-3 bg-white/15 rounded-full animate-bounce\" style={{animationDelay: '2s', animationDuration: '3.5s'}}></div>\n        <div className=\"absolute bottom-20 right-32 w-1.5 h-1.5 bg-white/25 rounded-full animate-bounce\" style={{animationDelay: '0.5s', animationDuration: '2.5s'}}></div>\n      </div>\n\n      {/* Header Section */}\n      <div className=\"relative z-10 text-center mb-16\">\n        <motion.div \n          className=\"text-center max-w-4xl mx-auto px-4\"\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true, amount: 0.3 }}\n          transition={{ duration: 0.8, ease: \"easeOut\" }}\n        >\n          <h2 className=\"text-5xl font-display italic text-primary mb-8\" data-testid=\"text-timeline-title\">\n            Wedding Timeline\n          </h2>\n        </motion.div>\n      </div>\n\n      {/* Simple Timeline List */}\n      <div className=\"relative z-20 max-w-4xl mx-auto px-4 space-y-4\">\n        {timelineEvents.map((event, index) => (\n          <TimelineItem key={index} event={event} index={index} />\n        ))}\n      </div>\n\n      {/* Bottom Decorative */}\n      <motion.div \n        className=\"mt-16 text-center\"\n        initial={{ opacity: 0 }}\n        whileInView={{ opacity: 1 }}\n        viewport={{ once: true, amount: 0.5 }}\n        transition={{ duration: 0.8, ease: \"easeOut\" }}\n      >\n        <div className=\"inline-flex items-center space-x-2\">\n          <div className=\"w-8 h-px bg-[#ffffff]\"></div>\n          <div className=\"w-2 h-2 bg-[#ffffff] rounded-full animate-pulse\"></div>\n          <div className=\"w-8 h-px bg-[#ffffff]\"></div>\n        </div>\n        <p className=\"mt-4 text-muted-foreground font-body italic\">\n          A celebration of love from dusk till dawn\n        </p>\n      </motion.div>\n    </motion.section>\n  );\n};\n\nexport default TimelineSection;","size_bytes":5497},"client/src/components/VenueSection.tsx":{"content":"import { Button } from '@/components/ui/button';\nimport { MapPin, ExternalLink } from 'lucide-react';\nimport { motion } from 'framer-motion';\nimport { useAnimationContext } from '@/contexts/AnimationContext';\nimport BotanicalLayer from '@/components/BotanicalLayer';\nimport ceremonyImage from '@assets/ceremony_1758345942861.jpg';\nimport receptionImage from '@assets/reception_1758345962490.jpg';\nimport birdOfParadise from '@assets/3_1758357477983.png';\nimport coralTulips from '@assets/5_1758357477984.png';\nimport yellowDaisy from '@assets/6_1758357477985.png';\nimport delicateBranch from '@assets/4_1758357477984.png';\n\nconst VenueSection = () => {\n  const { animationsEnabled } = useAnimationContext();\n  const venues = [\n    {\n      title: 'Ceremony',\n      name: 'St. James the Great Parish Alabang',\n      address: 'Alabang, Philippines',\n      image: ceremonyImage,\n      mapUrl: 'https://maps.app.goo.gl/DxgAM3AbcdwKkEM57',\n      description: 'We will exchange vows at the beautiful St. James the Great Parish Alabang.',\n      details: 'Please arrive early to ensure you are seated before the ceremony begins.',\n      additionalInfo: 'UNPLUGGED CEREMONY - We kindly ask that the ceremony be camera-free so everyone can be fully present in the moment.',\n      startTime: '2:15 PM',\n      locationGuide: 'Location Guide ‚Üí'\n    },\n    {\n      title: 'Reception',\n      name: 'Amistosa Clubhouse, Tierra Nueva Village Alabang',\n      address: 'Alabang, Philippines',\n      image: receptionImage,\n      mapUrl: 'https://maps.app.goo.gl/RR3gMVR1QxDxS5ut6',\n      description: 'Please join us for dinner, cocktails and dancing!',\n      details: 'After the ceremony, we will move to the reception venue for the celebration.',\n      website: '',\n      startTime: '4:00 PM',\n      locationGuide: 'Location Guide ‚Üí'\n    }\n  ];\n\n  return (\n    <motion.section \n      id=\"venue\" \n      className=\"section-hard-blue py-20 px-4\"\n      initial={animationsEnabled ? { opacity: 0 } : { opacity: 1 }}\n      animate={{ opacity: 1 }}\n      transition={animationsEnabled ? { duration: 1, delay: 6.5 } : { duration: 0 }}\n    >\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Section Title */}\n        <motion.div \n          className=\"text-center mb-20\"\n          initial={animationsEnabled ? { opacity: 0, y: 30 } : { opacity: 1, y: 0 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={animationsEnabled ? { duration: 0.8, ease: \"easeOut\", delay: 6.8 } : { duration: 0 }}\n        >\n          <h1 className=\"text-5xl font-display italic text-primary-foreground mb-8\" data-testid=\"text-venue-section-title\">\n            Venue\n          </h1>\n        </motion.div>\n        {/* Venues List */}\n        <div className=\"space-y-20\">\n          {venues.map((venue, index) => (\n            <motion.div \n              key={index}\n              initial={animationsEnabled ? { opacity: 0, y: 30 } : { opacity: 1, y: 0 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={animationsEnabled ? { duration: 0.8, ease: \"easeOut\", delay: 6.8 + (index * 0.4) } : { duration: 0 }}\n            >\n              {/* Venue Title */}\n              <motion.div \n                className=\"text-center mb-12\"\n                initial={animationsEnabled ? { opacity: 0, y: 20 } : { opacity: 1, y: 0 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={animationsEnabled ? { duration: 0.6, ease: \"easeOut\", delay: 7.0 + (index * 0.4) } : { duration: 0 }}\n              >\n                <h2 className=\"font-script italic text-primary-foreground mb-4 text-[35px]\" data-testid={`text-${venue.title.toLowerCase()}-title`}>\n                  {venue.title}\n                </h2>\n                <h3 className=\"font-body text-primary-foreground mb-4 text-lg\" data-testid={`text-${venue.title.toLowerCase()}-name`}>\n                  {venue.name}\n                </h3>\n              </motion.div>\n\n              {/* Venue Content */}\n              <div className=\"max-w-lg mx-auto text-center space-y-6\">\n                {/* Venue Image */}\n                <div className=\"mb-8 relative\">\n                  <img\n                    src={venue.image}\n                    alt={venue.name}\n                    className=\"w-full h-48 object-cover rounded-lg shadow-sm\"\n                    loading=\"lazy\"\n                    data-testid={`img-${venue.title.toLowerCase()}-venue`}\n                  />\n                  \n                  {/* Botanical Corner Decorations */}\n                  {index === 0 && ( // Ceremony\n                    <>\n                      <BotanicalLayer\n                        src={birdOfParadise}\n                        alt=\"\"\n                        testId={`venue-ceremony-bird-of-paradise`}\n                        top=\"-8px\"\n                        right=\"-8px\"\n                        width=\"40px\"\n                        height=\"auto\"\n                        opacity={0.6}\n                        zIndex={5}\n                        rotate={-15}\n                        variant=\"idleFloat\"\n                        delay={1.5}\n                        className=\"filter drop-shadow-lg\"\n                        ariaHidden={true}\n                      />\n                      <BotanicalLayer\n                        src={delicateBranch}\n                        alt=\"\"\n                        testId={`venue-ceremony-branch`}\n                        bottom=\"-6px\"\n                        left=\"-6px\"\n                        width=\"35px\"\n                        height=\"auto\"\n                        opacity={0.5}\n                        zIndex={5}\n                        rotate={25}\n                        variant=\"idleFloat\"\n                        delay={2.0}\n                        className=\"filter drop-shadow-lg\"\n                        ariaHidden={true}\n                      />\n                    </>\n                  )}\n                  \n                  {index === 1 && ( // Reception\n                    <>\n                      <BotanicalLayer\n                        src={coralTulips}\n                        alt=\"\"\n                        testId={`venue-reception-tulips`}\n                        top=\"-10px\"\n                        left=\"-8px\"\n                        width=\"45px\"\n                        height=\"auto\"\n                        opacity={0.55}\n                        zIndex={5}\n                        rotate={10}\n                        variant=\"idleFloat\"\n                        delay={1.8}\n                        className=\"filter drop-shadow-lg\"\n                        ariaHidden={true}\n                      />\n                      <BotanicalLayer\n                        src={yellowDaisy}\n                        alt=\"\"\n                        testId={`venue-reception-daisy`}\n                        bottom=\"-8px\"\n                        right=\"-6px\"\n                        width=\"38px\"\n                        height=\"auto\"\n                        opacity={0.6}\n                        zIndex={5}\n                        rotate={-20}\n                        variant=\"idleFloat\"\n                        delay={1.2}\n                        className=\"filter drop-shadow-lg\"\n                        ariaHidden={true}\n                      />\n                    </>\n                  )}\n                </div>\n\n                {/* Description */}\n                <div className=\"space-y-3 mb-8\">\n                  {venue.description.split('\\n').map((line, i) => (\n                    <p key={i} className=\"text-base font-body text-primary-foreground/90 leading-relaxed\" data-testid={`text-${venue.title.toLowerCase()}-description-${i + 1}`}>\n                      {line}\n                    </p>\n                  ))}\n                </div>\n\n                {/* Details */}\n                <p className=\"text-base font-body text-primary-foreground/90\" data-testid={`text-${venue.title.toLowerCase()}-details`}>\n                  {venue.details}\n                </p>\n\n                \n\n                {venue.website && (\n                  <p className=\"text-base font-body text-primary-foreground/90\" data-testid={`text-${venue.title.toLowerCase()}-website`}>\n                    {venue.website}\n                  </p>\n                )}\n\n                {/* Time and Location Guide */}\n                <div className=\"flex justify-between items-center pt-6 border-t border-primary-foreground/20\">\n                  <div className=\"text-left\">\n                    <p className=\"text-sm font-body text-primary-foreground/80 italic\" data-testid={`text-${venue.title.toLowerCase()}-start-time`}>\n                      Start time {venue.startTime}\n                    </p>\n                  </div>\n                  <div className=\"text-right\">\n                    <button\n                      className=\"location-guide-btn\"\n                      data-testid={`button-${venue.title.toLowerCase()}-location`}\n                      onClick={() => window.open(venue.mapUrl, '_blank')}\n                    >\n                      {venue.locationGuide}\n                    </button>\n                  </div>\n                </div>\n\n\n              </div>\n            </motion.div>\n          ))}\n        </div>\n        \n        {/* Unplugged Ceremony Note */}\n        <motion.div \n          className=\"mt-16 text-center bg-card/30 border border-border rounded-xl p-8 max-w-4xl mx-auto\"\n          initial={animationsEnabled ? { opacity: 0, y: 30 } : { opacity: 1, y: 0 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={animationsEnabled ? { duration: 0.8, ease: \"easeOut\", delay: 8.4 } : { duration: 0 }}\n        >\n          <h3 className=\"text-2xl font-display text-primary-foreground mb-4 font-medium\">Unplugged Ceremony</h3>\n          <p className=\"text-base font-body text-primary-foreground/90 leading-relaxed mb-4\">\n            We kindly ask that the ceremony be camera-free so everyone can be fully present in the moment. Once we move to the reception venue, please feel free to take as many photos and videos as you like‚Äîwe'd love for you to help us capture more memories!\n          </p>\n        </motion.div>\n      </div>\n    </motion.section>\n  );\n};\n\nexport default VenueSection;","size_bytes":10195},"client/src/components/VideoSection.tsx":{"content":"import { useRef, useEffect } from 'react';\nimport { motion } from 'framer-motion';\n\nconst VideoSection = () => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    const video = videoRef.current;\n    if (!video) return;\n\n    const handlePlay = () => {\n      // Pause background music when video starts\n      const audio = document.querySelector('audio[data-testid=\"background-audio\"]') as HTMLAudioElement;\n      if (audio) {\n        audio.pause();\n      }\n    };\n\n    const handlePause = () => {\n      // Resume background music when video pauses\n      const audio = document.querySelector('audio[data-testid=\"background-audio\"]') as HTMLAudioElement;\n      if (audio) {\n        audio.play().catch(() => {\n          // Silently handle autoplay restrictions\n        });\n      }\n    };\n\n    const handleEnded = () => {\n      // Resume background music when video ends\n      const audio = document.querySelector('audio[data-testid=\"background-audio\"]') as HTMLAudioElement;\n      if (audio) {\n        audio.play().catch(() => {\n          // Silently handle autoplay restrictions\n        });\n      }\n    };\n\n    video.addEventListener('play', handlePlay);\n    video.addEventListener('pause', handlePause);\n    video.addEventListener('ended', handleEnded);\n\n    return () => {\n      video.removeEventListener('play', handlePlay);\n      video.removeEventListener('pause', handlePause);\n      video.removeEventListener('ended', handleEnded);\n    };\n  }, []);\n\n  return (\n    <motion.section \n      className=\"section-pastel-blue relative w-full overflow-hidden\"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 1, delay: 4.5 }}\n    >\n      {/* Section Header */}\n      <div className=\"text-center py-8 px-4\">\n        <h2 className=\"text-5xl font-script italic font-black text-primary mb-8\" data-testid=\"text-video-title\">\n          Save the Date Video\n        </h2>\n      </div>\n      {/* Full Width Video Container */}\n      <div className=\"relative w-screen left-1/2 -translate-x-1/2 overflow-hidden\">\n        <video\n          ref={videoRef}\n          loop\n          playsInline\n          controls\n          style={{\n            display: 'block',\n            width: '100%',\n            height: 'auto',\n            objectFit: 'contain',\n            objectPosition: 'top',\n            margin: 0,\n            padding: 0\n          }}\n        >\n          <source\n            src=\"https://res.cloudinary.com/dpzxdmqqg/video/upload/v1755326629/LUIS_JESSY_Our_Prenup_Music_Video_zfytbf_g7zn7u_tdoloe.mp4\"\n            type=\"video/mp4\"\n          />\n          Your browser does not support the video tag.\n        </video>\n      </div>\n    </motion.section>\n  );\n};\n\nexport default VideoSection;","size_bytes":2747},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import { useState } from \"react\"\n\nexport interface Toast {\n  id: string\n  title?: string\n  description?: string\n  action?: React.ReactNode\n  variant?: \"default\" | \"destructive\"\n}\n\nexport function useToast() {\n  const [toasts, setToasts] = useState<Toast[]>([])\n\n  const toast = ({ ...props }: Omit<Toast, \"id\">) => {\n    const id = Math.random().toString(36).substr(2, 9)\n    const newToast = { id, ...props }\n    setToasts((prev) => [...prev, newToast])\n    \n    // Auto remove toast after 5 seconds\n    setTimeout(() => {\n      setToasts((prev) => prev.filter((t) => t.id !== id))\n    }, 5000)\n    \n    return {\n      id,\n      dismiss: () => setToasts((prev) => prev.filter((t) => t.id !== id)),\n    }\n  }\n\n  const dismiss = (id: string) => {\n    setToasts((prev) => prev.filter((t) => t.id !== id))\n  }\n\n  return {\n    toast,\n    toasts,\n    dismiss,\n  }\n}","size_bytes":860},"client/src/lib/queryClient.ts":{"content":"import { QueryClient } from \"@tanstack/react-query\";\n\n// Static site configuration - no server API calls\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      // Static site - no API endpoints needed\n      retry: false,\n      staleTime: Infinity, // Static content doesn't change\n    },\n  },\n});\n\nexport { queryClient };\n\n// For static wedding site - no API calls needed\nexport const apiRequest = async (url: string, options: RequestInit = {}) => {\n  // Wedding invitation is static - no server endpoints\n  console.warn('API calls not available in static deployment');\n  return Promise.resolve({});\n};","size_bytes":626},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/Index.tsx":{"content":"import { useEffect, useRef, useState } from 'react';\n\nimport Navigation from '@/components/Navigation';\nimport HeroSection from '@/components/HeroSection';\nimport ImageLoop from '@/components/ImageLoop';\nimport MusicConsentPopup from '@/components/MusicConsentPopup';\nimport loop2Image from '@assets/cover1_1758344789618.jpg';\nimport loop3Image from '@assets/cover2_1758344789613.png';\nimport loop4Image from '@assets/cover3_1758344789617.jpg';\nimport CountdownSection from '@/components/CountdownSection';\nimport StorySection from '@/components/StorySection';\nimport TimelineSection from '@/components/TimelineSection';\nimport VenueSection from '@/components/VenueSection';\nimport DressCodeSection from '@/components/DressCodeSection';\nimport EntourageSection from '@/components/EntourageSection';\nimport GiftSection from '@/components/GiftSection';\nimport RSVPSection from '@/components/RSVPSection';\nimport MemorableMomentsSection from '@/components/MemorableMomentsSection';\nimport FAQSection from '@/components/FAQSection';\nimport Footer from '@/components/Footer';\nimport CoverSection from '@/components/CoverSection';\nimport { AnimationContext } from '@/contexts/AnimationContext';\n\nconst Index = () => {\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const [showMusicConsent, setShowMusicConsent] = useState(true);\n  const [musicConsent, setMusicConsent] = useState<boolean | null>(null);\n  const [animationsEnabled, setAnimationsEnabled] = useState(false);\n\n  // Ensure audio is properly initialized\n  useEffect(() => {\n    if (audioRef.current) {\n      const audio = audioRef.current;\n      audio.volume = 0.3;\n      audio.loop = true;\n      \n      // Handle audio loading\n      const handleCanPlay = () => {\n        console.log('Audio is ready to play');\n      };\n      \n      const handleError = (e: Event) => {\n        console.error('Audio loading error:', e);\n      };\n      \n      const handleLoadedData = () => {\n        console.log('Audio data loaded successfully');\n      };\n      \n      audio.addEventListener('canplay', handleCanPlay);\n      audio.addEventListener('error', handleError);\n      audio.addEventListener('loadeddata', handleLoadedData);\n      \n      return () => {\n        audio.removeEventListener('canplay', handleCanPlay);\n        audio.removeEventListener('error', handleError);\n        audio.removeEventListener('loadeddata', handleLoadedData);\n      };\n    }\n  }, []);\n\n  const handleMusicConsent = (consent: boolean) => {\n    setMusicConsent(consent);\n    setShowMusicConsent(false);\n    // Enable animations regardless of music choice - user has interacted\n    setAnimationsEnabled(true);\n    \n    if (consent && audioRef.current) {\n      const audio = audioRef.current;\n      \n      // Set audio properties\n      audio.volume = 0.3;\n      audio.loop = true;\n      \n      // First check if the audio source is valid\n      console.log('Checking audio source:', audio.src);\n      console.log('Audio ready state:', audio.readyState);\n      \n      // Function to attempt playing\n      const attemptPlay = () => {\n        console.log('Attempting to play background music...');\n        \n        const playPromise = audio.play();\n        if (playPromise !== undefined) {\n          playPromise.then(() => {\n            console.log('Background music started successfully');\n          }).catch((error) => {\n            console.error('Music play failed:', {\n              message: error.message,\n              name: error.name,\n              code: error.code\n            });\n            \n            // Set up interaction listeners with better cleanup\n            setupInteractionListeners();\n          });\n        } else {\n          console.log('Play promise is undefined, setting up interaction listeners');\n          setupInteractionListeners();\n        }\n      };\n      \n      // Function to set up interaction listeners\n      const setupInteractionListeners = () => {\n        console.log('Setting up interaction listeners...');\n        \n        const interactionEvents = ['click', 'touchstart', 'keydown', 'mousedown'];\n        const playOnInteraction = () => {\n          console.log('User interaction detected, attempting to play music...');\n          \n          const retryPromise = audio.play();\n          if (retryPromise !== undefined) {\n            retryPromise.then(() => {\n              console.log('Music started successfully on user interaction');\n              // Remove all listeners\n              interactionEvents.forEach(event => {\n                document.removeEventListener(event, playOnInteraction);\n              });\n            }).catch((err) => {\n              console.error('Failed to play music on interaction:', {\n                message: err.message,\n                name: err.name,\n                readyState: audio.readyState,\n                networkState: audio.networkState\n              });\n            });\n          }\n        };\n        \n        // Add listeners\n        interactionEvents.forEach(event => {\n          document.addEventListener(event, playOnInteraction, { \n            passive: true, \n            once: true \n          });\n        });\n      };\n      \n      // Check if audio is ready\n      if (audio.readyState >= 2) {\n        // Audio is loaded enough to play\n        attemptPlay();\n      } else {\n        // Wait for audio to be ready\n        const onCanPlay = () => {\n          audio.removeEventListener('canplay', onCanPlay);\n          attemptPlay();\n        };\n        \n        const onError = (e: Event) => {\n          audio.removeEventListener('error', onError);\n          console.error('Audio loading failed:', e);\n          console.log('Audio network state:', audio.networkState);\n          console.log('Audio error:', audio.error);\n        };\n        \n        audio.addEventListener('canplay', onCanPlay);\n        audio.addEventListener('error', onError);\n        \n        // Force load the audio\n        audio.load();\n      }\n    }\n  };\n\n  return (\n    <AnimationContext.Provider value={{ animationsEnabled }}>\n      {/* Background Music - Always present */}\n      <audio\n        ref={audioRef}\n        loop\n        preload=\"auto\"\n        crossOrigin=\"anonymous\"\n        style={{ display: 'none' }}\n        data-testid=\"background-audio\"\n      >\n        <source \n          src=\"https://res.cloudinary.com/dr3xey7h9/video/upload/v1758359772/ytmp3free.cc_gatton-when-scars-become-art-lyrics-cause-i-wanna-love-you-for-good-youtubemp3free.org_a3o7gu.mp3\" \n          type=\"audio/mpeg\"\n        />\n        {/* Fallback for browsers that don't support MP3 */}\n        <source \n          src=\"https://www.soundjay.com/misc/sounds/clock-ticking-5.wav\" \n          type=\"audio/wav\"\n        />\n        Your browser does not support the audio element.\n      </audio>\n      \n      {/* Music Consent Popup */}\n      {showMusicConsent && <MusicConsentPopup onConsent={handleMusicConsent} />}\n\n      <div className=\"min-h-screen relative\">\n        <Navigation />\n        \n        {/* Main Content Sections */}\n        <main className=\"relative z-10\">\n          <HeroSection />\n          <CountdownSection />\n          <ImageLoop />\n          <StorySection />\n          <CoverSection \n            imageUrl={loop2Image}\n            alt=\"Andrei & Sam Wedding Cover Image 1\"\n          />\n          <TimelineSection />\n          <VenueSection />\n          <CoverSection \n            imageUrl={loop3Image}\n            alt=\"Andrei & Sam Wedding Cover Image 2\"\n          />\n          <DressCodeSection />\n          <MemorableMomentsSection />\n          <RSVPSection />\n          <EntourageSection />\n          <GiftSection />\n          <CoverSection \n            imageUrl={loop4Image}\n            alt=\"Andrei & Sam Wedding Cover Image 3\"\n          />\n          <FAQSection />\n          <Footer />\n        </main>\n      </div>\n    </AnimationContext.Provider>\n  );\n};\n\nexport default Index;","size_bytes":7864},"client/src/pages/NotFound.tsx":{"content":"import { useLocation } from \"wouter\";\nimport { useEffect } from \"react\";\n\nconst NotFound = () => {\n  const [location] = useLocation();\n\n  useEffect(() => {\n    console.error(\n      \"404 Error: User attempted to access non-existent route:\",\n      location\n    );\n  }, [location]);\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n      <div className=\"text-center\">\n        <h1 className=\"text-4xl font-bold mb-4\">404</h1>\n        <p className=\"text-xl text-gray-600 mb-4\">Oops! Page not found</p>\n        <a href=\"/\" className=\"text-blue-500 hover:text-blue-700 underline\" data-testid=\"link-home\">\n          Return to Home\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","size_bytes":737},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"import * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1405},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:size-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2701},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n        // Wedding-specific variants\n        hero: \"bg-gold hover:bg-gold/90 text-primary font-semibold shadow-warm border-0 rounded-full hover:scale-105 transition-all duration-300\",\n        elegant: \"bg-gradient-gold hover:bg-gradient-warm text-primary font-medium shadow-elegant border border-gold/20 hover:scale-105 transition-all duration-300\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":2251},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\nimport { DayPicker } from \"react-day-picker\";\n\nimport { cn } from \"@/lib/utils\";\nimport { buttonVariants } from \"@/components/ui/button\";\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>;\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ..._props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ..._props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  );\n}\nCalendar.displayName = \"Calendar\";\n\nexport { Calendar };\n","size_bytes":2620},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1877},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"import * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([_, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10466},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"import * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":315},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\ninterface CommandDialogProps extends DialogProps {}\n\nconst CommandDialog = ({ children, ...props }: CommandDialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4879},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7246},"client/src/components/ui/dialog.tsx":{"content":"import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3835},"client/src/components/ui/drawer.tsx":{"content":"import * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3007},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7295},"client/src/components/ui/form.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message) : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4085},"client/src/components/ui/hover-card.tsx":{"content":"import * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1184},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"import * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst MenubarMenu = MenubarPrimitive.Menu\n\nconst MenubarGroup = MenubarPrimitive.Group\n\nconst MenubarPortal = MenubarPrimitive.Portal\n\nconst MenubarSub = MenubarPrimitive.Sub\n\nconst MenubarRadioGroup = MenubarPrimitive.RadioGroup\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":7974},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5046},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1230},"client/src/components/ui/progress.tsx":{"content":"import * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":777},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"import { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1709},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5615},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"import * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n  VariantProps<typeof sheetVariants> { }\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet, SheetClose,\n  SheetContent, SheetDescription, SheetFooter, SheetHeader, SheetOverlay, SheetPortal, SheetTitle, SheetTrigger\n}\n\n","size_bytes":4250},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { Sheet, SheetContent } from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar:state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContext = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContext | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContext>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden md:block text-sidebar-foreground\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"duration-200 relative h-svh w-[--sidebar-width] bg-transparent transition-[width] ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"duration-200 fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex min-h-svh flex-1 flex-col bg-background\",\n        \"peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"duration-200 flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opa] ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground select-none pointer-events-none\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"rounded-md h-8 flex gap-2 px-2 items-center\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 flex-1 max-w-[--skeleton-width]\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23367},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/sonner.tsx":{"content":"import { useTheme } from \"@/components/ThemeProvider\"\nimport { Toaster as Sonner, toast } from \"sonner\"\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Toaster, toast }\n","size_bytes":909},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":772},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"import * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1739},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3\",\n        sm: \"h-9 px-2.5\",\n        lg: \"h-11 px-5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1435},"client/src/components/ui/tooltip.tsx":{"content":"import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1145},"client/src/components/ui/use-toast.ts":{"content":"import { useToast, toast } from \"@/hooks/use-toast\";\n\nexport { useToast, toast };\n","size_bytes":82},"client/src/components/DotGrid.tsx":{"content":"import { useRef, useEffect } from 'react';\n\ninterface DotGridProps {\n  baseColor?: string;\n  activeColor?: string;\n  dotSize?: number;\n  gap?: number;\n  proximity?: number;\n  shockRadius?: number;\n  shockStrength?: number;\n  resistance?: number;\n  returnDuration?: number;\n}\n\nconst DotGrid = ({\n  baseColor = '#333333',\n  activeColor = '#6366f1',\n  dotSize = 5,\n  gap = 15,\n  proximity = 120,\n  shockRadius = 250,\n  shockStrength = 5,\n  resistance = 750,\n  returnDuration = 1.5\n}: DotGridProps) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const animationIdRef = useRef<number>();\n  const dotsRef = useRef<Array<{\n    x: number;\n    y: number;\n    originalX: number;\n    originalY: number;\n    vx: number;\n    vy: number;\n    active: boolean;\n    opacity: number;\n  }>>([]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      initializeDots();\n    };\n\n    const initializeDots = () => {\n      dotsRef.current = [];\n      const cols = Math.ceil(canvas.width / gap);\n      const rows = Math.ceil(canvas.height / gap);\n      \n      for (let i = 0; i <= cols; i++) {\n        for (let j = 0; j <= rows; j++) {\n          const x = i * gap;\n          const y = j * gap;\n          dotsRef.current.push({\n            x,\n            y,\n            originalX: x,\n            originalY: y,\n            vx: 0,\n            vy: 0,\n            active: false,\n            opacity: 0.3\n          });\n        }\n      }\n    };\n\n    const handleMouseMove = (event: MouseEvent) => {\n      const mouseX = event.clientX;\n      const mouseY = event.clientY;\n\n      dotsRef.current.forEach(dot => {\n        const dx = mouseX - dot.x;\n        const dy = mouseY - dot.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n\n        if (distance < proximity) {\n          dot.active = true;\n          dot.opacity = Math.min(1, 1 - distance / proximity);\n          \n          if (distance < shockRadius) {\n            const force = (shockRadius - distance) / shockRadius * shockStrength;\n            const angle = Math.atan2(dy, dx);\n            dot.vx -= Math.cos(angle) * force;\n            dot.vy -= Math.sin(angle) * force;\n          }\n        } else {\n          dot.active = false;\n          dot.opacity = 0.3;\n        }\n      });\n    };\n\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      dotsRef.current.forEach(dot => {\n        // Apply physics\n        const returnForceX = (dot.originalX - dot.x) / resistance;\n        const returnForceY = (dot.originalY - dot.y) / resistance;\n        \n        dot.vx += returnForceX;\n        dot.vy += returnForceY;\n        dot.vx *= (1 - 1 / returnDuration / 60); // Damping\n        dot.vy *= (1 - 1 / returnDuration / 60);\n        \n        dot.x += dot.vx;\n        dot.y += dot.vy;\n\n        // Draw dot\n        ctx.beginPath();\n        ctx.arc(dot.x, dot.y, dotSize / 2, 0, Math.PI * 2);\n        \n        if (dot.active) {\n          // Parse hex color and apply opacity\n          const r = parseInt(activeColor.slice(1, 3), 16);\n          const g = parseInt(activeColor.slice(3, 5), 16);\n          const b = parseInt(activeColor.slice(5, 7), 16);\n          ctx.fillStyle = `rgba(${r}, ${g}, ${b}, ${dot.opacity})`;\n        } else {\n          const r = parseInt(baseColor.slice(1, 3), 16);\n          const g = parseInt(baseColor.slice(3, 5), 16);\n          const b = parseInt(baseColor.slice(5, 7), 16);\n          ctx.fillStyle = `rgba(${r}, ${g}, ${b}, ${dot.opacity})`;\n        }\n        \n        ctx.fill();\n      });\n\n      animationIdRef.current = requestAnimationFrame(animate);\n    };\n\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n    window.addEventListener('mousemove', handleMouseMove);\n    animate();\n\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      window.removeEventListener('mousemove', handleMouseMove);\n      if (animationIdRef.current) {\n        cancelAnimationFrame(animationIdRef.current);\n      }\n    };\n  }, [baseColor, activeColor, dotSize, gap, proximity, shockRadius, shockStrength, resistance, returnDuration]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      className=\"absolute inset-0 pointer-events-none z-0\"\n      data-testid=\"dot-grid-background\"\n    />\n  );\n};\n\nexport default DotGrid;","size_bytes":4475},"client/src/components/ImageLoop.tsx":{"content":"import loop1Image from '@assets/loop1_1758344789616.jpg';\nimport loop2Image from '@assets/loop2_1758344789618.jpg';\nimport loop3Image from '@assets/loop3_1758344789619.jpg';\nimport loop4Image from '@assets/loop4_1758344789615.jpg';\nimport loop5Image from '@assets/loop5_1758344789612.png';\nimport loop6Image from '@assets/loop6_1758344789614.jpg';\nimport cover1Image from '@assets/cover1_1758344789618.jpg';\nimport cover2Image from '@assets/cover2_1758344789613.png';\nimport cover3Image from '@assets/cover3_1758344789617.jpg';\nimport { useAnimationContext } from '@/contexts/AnimationContext';\n\nconst ImageLoop = () => {\n  const { animationsEnabled } = useAnimationContext();\n  const images = [\n    loop1Image,\n    loop2Image,\n    loop3Image,\n    loop4Image,\n    loop5Image,\n    loop6Image,\n    cover1Image,\n    cover2Image,\n    cover3Image\n  ];\n\n  return (\n    <section id=\"slideshow\" className=\"image-loop-section w-full overflow-hidden py-4\">\n      <div className=\"image-loop-container\">\n        <div className={`${animationsEnabled ? 'image-loop-track' : 'image-loop-track-static'}`}>\n          {/* First set of images */}\n          {images.map((image, index) => (\n            <div key={`set1-${index}`} className=\"image-loop-item\">\n              <img\n                src={image}\n                alt={`Andrei & Sam moment ${index + 1}`}\n                className=\"image-loop-img\"\n                loading=\"lazy\"\n                data-testid={`img-loop-${index + 1}`}\n              />\n            </div>\n          ))}\n          {/* Duplicate set for seamless looping */}\n          {images.map((image, index) => (\n            <div key={`set2-${index}`} className=\"image-loop-item\">\n              <img\n                src={image}\n                alt={`Andrei & Sam moment ${index + 1} duplicate`}\n                className=\"image-loop-img\"\n                loading=\"lazy\"\n                data-testid={`img-loop-dup-${index + 1}`}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ImageLoop;","size_bytes":2056},"client/src/components/DarkVeil.tsx":{"content":"import { useRef, useEffect } from 'react';\nimport { Renderer, Program, Mesh, Triangle, Vec2 } from 'ogl';\nimport { useAnimationContext } from '@/contexts/AnimationContext';\n\nconst vertex = `\nattribute vec2 position;\nvoid main(){gl_Position=vec4(position,0.0,1.0);}\n`;\n\nconst fragment = `\n#ifdef GL_ES\nprecision lowp float;\n#endif\nuniform vec2 uResolution;\nuniform float uTime;\nuniform float uHueShift;\nuniform float uNoise;\nuniform float uScan;\nuniform float uScanFreq;\nuniform float uWarp;\n#define iTime uTime\n#define iResolution uResolution\nvec4 buf[8];\nfloat rand(vec2 c){return fract(sin(dot(c,vec2(12.9898,78.233)))*43758.5453);}\nmat3 rgb2yiq=mat3(0.299,0.587,0.114,0.596,-0.274,-0.322,0.211,-0.523,0.312);\nmat3 yiq2rgb=mat3(1.0,0.956,0.621,1.0,-0.272,-0.647,1.0,-1.106,1.703);\nvec3 hueShiftRGB(vec3 col,float deg){\nvec3 yiq=rgb2yiq*col;\nfloat rad=radians(deg);\nfloat cosh=cos(rad),sinh=sin(rad);\nvec3 yiqShift=vec3(yiq.x,yiq.y*cosh-yiq.z*sinh,yiq.y*sinh+yiq.z*cosh);\nreturn clamp(yiq2rgb*yiqShift,0.0,1.0);\n}\nvec4 sigmoid(vec4 x){return 1./(1.+exp(-x));}\nvec4 cppn_fn(vec2 coordinate,float in0,float in1,float in2){\nbuf[6]=vec4(coordinate.x,coordinate.y,0.3948333106474662+in0,0.36+in1);\nbuf[7]=vec4(0.14+in2,sqrt(coordinate.x*coordinate.x+coordinate.y*coordinate.y),0.,0.);\nbuf[0]=mat4(vec4(6.5404263,-3.6126034,0.7590882,-1.13613),vec4(2.4582713,3.1660357,1.2219609,0.06276096),vec4(-5.478085,-6.159632,1.8701609,-4.7742867),vec4(6.039214,-5.542865,-0.90925294,3.251348))*buf[6]+mat4(vec4(0.8473259,-5.722911,3.975766,1.6522468),vec4(-0.24321538,0.5839259,-1.7661959,-5.350116),vec4(0.,0.,0.,0.),vec4(0.,0.,0.,0.))*buf[7]+vec4(0.21808943,1.1243913,-1.7969975,5.0294676);\nbuf[1]=mat4(vec4(-3.3522482,-6.0612736,0.55641043,-4.4719114),vec4(0.8631464,1.7432913,5.643898,1.6106541),vec4(2.4941394,-3.5012043,1.7184316,6.357333),vec4(3.310376,8.209261,1.1355612,-1.165539))*buf[6]+mat4(vec4(5.24046,-13.034365,0.009859298,15.870829),vec4(2.987511,3.129433,-0.89023495,-1.6822904),vec4(0.,0.,0.,0.),vec4(0.,0.,0.,0.))*buf[7]+vec4(-5.9457836,-6.573602,-0.8812491,1.5436668);\nbuf[0]=sigmoid(buf[0]);buf[1]=sigmoid(buf[1]);\nbuf[2]=mat4(vec4(-15.219568,8.095543,-2.429353,-1.9381982),vec4(-5.951362,4.3115187,2.6393783,1.274315),vec4(-7.3145227,6.7297835,5.2473326,5.9411426),vec4(5.0796127,8.979051,-1.7278991,-1.158976))*buf[6]+mat4(vec4(-11.967154,-11.608155,6.1486754,11.237008),vec4(2.124141,-6.263192,-1.7050359,-0.7021966),vec4(0.,0.,0.,0.),vec4(0.,0.,0.,0.))*buf[7]+vec4(-4.17164,-3.2281182,-4.576417,-3.6401186);\nbuf[3]=mat4(vec4(3.1832156,-13.738922,1.879223,3.233465),vec4(0.64300746,12.768129,1.9141049,0.50990224),vec4(-0.049295485,4.4807224,1.4733979,1.801449),vec4(5.0039253,13.000481,3.3991797,-4.5561905))*buf[6]+mat4(vec4(-0.1285731,7.720628,-3.1425676,4.742367),vec4(0.6393625,3.714393,-0.8108378,-0.39174938),vec4(0.,0.,0.,0.),vec4(0.,0.,0.,0.))*buf[7]+vec4(-1.1811101,-21.621881,0.7851888,1.2329718);\nbuf[2]=sigmoid(buf[2]);buf[3]=sigmoid(buf[3]);\nbuf[4]=mat4(vec4(5.214916,-7.183024,2.7228765,2.6592617),vec4(-5.601878,-25.3591,4.067988,0.4602802),vec4(-10.57759,24.286327,21.102104,37.546658),vec4(4.3024497,-1.9625226,2.3458803,-1.372816))*buf[0]+mat4(vec4(-17.6526,-10.507558,2.2587414,12.462782),vec4(6.265566,-502.75443,-12.642513,0.9112289),vec4(-10.983244,20.741234,-9.701768,-0.7635988),vec4(5.383626,1.4819539,-4.1911616,-4.8444734))*buf[1]+mat4(vec4(12.785233,-16.345072,-0.39901125,1.7955981),vec4(-30.48365,-1.8345358,1.4542528,-1.1118771),vec4(19.872723,-7.337935,-42.941723,-98.52709),vec4(8.337645,-2.7312303,-2.2927687,-36.142323))*buf[2]+mat4(vec4(-16.298317,3.5471997,-0.44300047,-9.444417),vec4(57.5077,-35.609753,16.163465,-4.1534753),vec4(-0.07470326,-3.8656476,-7.0901804,3.1523974),vec4(-12.559385,-7.077619,1.490437,-0.8211543))*buf[3]+vec4(-7.67914,15.927437,1.3207729,-1.6686112);\nbuf[5]=mat4(vec4(-1.4109162,-0.372762,-3.770383,-21.367174),vec4(-6.2103205,-9.35908,0.92529047,8.82561),vec4(11.460242,-22.348068,13.625772,-18.693201),vec4(-0.3429052,-3.9905605,-2.4626114,-0.45033523))*buf[0]+mat4(vec4(7.3481627,-4.3661838,-6.3037653,-3.868115),vec4(1.5462853,6.5488915,1.9701879,-0.58291394),vec4(6.5858274,-2.2180402,3.7127688,-1.3730392),vec4(-5.7973905,10.134961,-2.3395722,-5.965605))*buf[1]+mat4(vec4(-2.5132585,-6.6685553,-1.4029363,-0.16285264),vec4(-0.37908727,0.53738135,4.389061,-1.3024765),vec4(-0.70647055,2.0111287,-5.1659346,-3.728635),vec4(-13.562562,10.487719,-0.9173751,-2.6487076))*buf[2]+mat4(vec4(-8.645013,6.5546675,-6.3944063,-5.5933375),vec4(-0.57783127,-1.077275,36.91025,5.736769),vec4(14.283112,3.7146652,7.1452246,-4.5958776),vec4(2.7192075,3.6021907,-4.366337,-2.3653464))*buf[3]+vec4(-5.9000807,-4.329569,1.2427121,8.59503);\nbuf[4]=sigmoid(buf[4]);buf[5]=sigmoid(buf[5]);\nbuf[6]=mat4(vec4(-1.61102,0.7970257,1.4675229,0.20917463),vec4(-28.793737,-7.1390953,1.5025433,4.656581),vec4(-10.94861,39.66238,0.74318546,-10.095605),vec4(-0.7229728,-1.5483948,0.7301322,2.1687684))*buf[0]+mat4(vec4(3.2547753,21.489103,-1.0194173,-3.3100595),vec4(-3.7316632,-3.3792162,-7.223193,-0.23685838),vec4(13.1804495,0.7916005,5.338587,5.687114),vec4(-4.167605,-17.798311,-6.815736,-1.6451967))*buf[1]+mat4(vec4(0.604885,-7.800309,-7.213122,-2.741014),vec4(-3.522382,-0.12359311,-0.5258442,0.43852118),vec4(9.6752825,-22.853785,2.062431,0.099892326),vec4(-4.3196306,-17.730087,2.5184598,5.30267))*buf[2]+mat4(vec4(-6.545563,-15.790176,-6.0438633,-5.415399),vec4(-43.591583,28.551912,-16.00161,18.84728),vec4(4.212382,8.394307,3.0958717,8.657522),vec4(-5.0237565,-4.450633,-4.4768,-5.5010443))*buf[3]+mat4(vec4(1.6985557,-67.05806,6.897715,1.9004834),vec4(1.8680354,2.3915145,2.5231109,4.081538),vec4(11.158006,1.7294737,2.0738268,7.386411),vec4(-4.256034,-306.24686,8.258898,-17.132736))*buf[4]+mat4(vec4(1.6889864,-4.5852966,3.8534803,-6.3482175),vec4(1.3543309,-1.2640043,9.932754,2.9079645),vec4(-5.2770967,0.07150358,-0.13962056,3.3269649),vec4(28.34703,-4.918278,6.1044083,4.085355))*buf[5]+vec4(6.6818056,12.522166,-3.7075126,-4.104386);\nbuf[7]=mat4(vec4(-8.265602,-4.7027016,5.098234,0.7509808),vec4(8.6507845,-17.15949,16.51939,-8.884479),vec4(-4.036479,-2.3946867,-2.6055532,-1.9866527),vec4(-2.2167742,-1.8135649,-5.9759874,4.8846445))*buf[0]+mat4(vec4(6.7790847,3.5076547,-2.8191125,-2.7028968),vec4(-5.743024,-0.27844876,1.4958696,-5.0517144),vec4(13.122226,15.735168,-2.9397483,-4.101023),vec4(-14.375265,-5.030483,-6.2599335,2.9848232))*buf[1]+mat4(vec4(4.0950394,-0.94011575,-5.674733,4.755022),vec4(4.3809423,4.8310084,1.7425908,-3.437416),vec4(2.117492,0.16342592,-104.56341,16.949184),vec4(-5.22543,-2.994248,3.8350096,-1.9364246))*buf[2]+mat4(vec4(-5.900337,1.7946124,-13.604192,-3.8060522),vec4(6.6583457,31.911177,25.164474,91.81147),vec4(11.840538,4.1503043,-0.7314397,6.768467),vec4(-6.3967767,4.034772,6.1714606,-0.32874924))*buf[3]+mat4(vec4(3.4992442,-196.91893,-8.923708,2.8142626),vec4(3.4806502,-3.1846354,5.1725626,5.1804223),vec4(-2.4009497,15.585794,1.2863957,2.0252278),vec4(-71.25271,-62.441242,-8.138444,0.50670296))*buf[4]+mat4(vec4(-12.291733,-11.176166,-7.3474145,4.390294),vec4(10.805477,5.6337385,-0.9385842,-4.7348723),vec4(-12.869276,-7.039391,5.3029537,7.5436664),vec4(1.4593618,8.91898,3.5101583,5.840625))*buf[5]+vec4(2.2415268,-6.705987,-0.98861027,-2.117676);\nbuf[6]=sigmoid(buf[6]);buf[7]=sigmoid(buf[7]);\nbuf[0]=mat4(vec4(1.6794263,1.3817469,2.9625452,0.),vec4(-1.8834411,-1.4806935,-3.5924516,0.),vec4(-1.3279216,-1.0918057,-2.3124623,0.),vec4(0.2662234,0.23235129,0.44178495,0.))*buf[0]+mat4(vec4(-0.6299101,-0.5945583,-0.9125601,0.),vec4(0.17828953,0.18300213,0.18182953,0.),vec4(-2.96544,-2.5819945,-4.9001055,0.),vec4(1.4195864,1.1868085,2.5176322,0.))*buf[1]+mat4(vec4(-1.2584374,-1.0552157,-2.1688404,0.),vec4(-0.7200217,-0.52666044,-1.438251,0.),vec4(0.15345335,0.15196142,0.272854,0.),vec4(0.945728,0.8861938,1.2766753,0.))*buf[2]+mat4(vec4(-2.4218085,-1.968602,-4.35166,0.),vec4(-22.683098,-18.0544,-41.954372,0.),vec4(0.63792,0.5470648,1.1078634,0.),vec4(-1.5489894,-1.3075932,-2.6444845,0.))*buf[3]+mat4(vec4(-0.49252132,-0.39877754,-0.91366625,0.),vec4(0.95609266,0.7923952,1.640221,0.),vec4(0.30616966,0.15693925,0.8639857,0.),vec4(1.1825981,0.94504964,2.176963,0.))*buf[4]+mat4(vec4(0.35446745,0.3293795,0.59547555,0.),vec4(-0.58784515,-0.48177817,-1.0614829,0.),vec4(2.5271258,1.9991658,4.6846647,0.),vec4(0.13042648,0.08864098,0.30187556,0.))*buf[5]+mat4(vec4(-1.7718065,-1.4033192,-3.3355875,0.),vec4(3.1664357,2.638297,5.378702,0.),vec4(-3.1724713,-2.6107926,-5.549295,0.),vec4(-2.851368,-2.249092,-5.3013067,0.))*buf[6]+mat4(vec4(1.5203838,1.2212278,2.8404984,0.),vec4(1.5210563,1.2651345,2.683903,0.),vec4(2.9789467,2.4364579,5.2347264,0.),vec4(2.2270417,1.8825914,3.8028636,0.))*buf[7]+vec4(-1.5468478,-3.6171484,0.24762098,0.);\nbuf[0]=sigmoid(buf[0]);\nreturn vec4(buf[0].x,buf[0].y,buf[0].z,1.);\n}\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\nvec2 uv=fragCoord/uResolution.xy*2.-1.;\nuv.y*=-1.;\nuv+=uWarp*vec2(sin(uv.y*6.283+uTime*0.5),cos(uv.x*6.283+uTime*0.5))*0.05;\nfragColor=cppn_fn(uv,0.1*sin(0.3*uTime),0.1*sin(0.69*uTime),0.1*sin(0.44*uTime));\n}\nvoid main(){\nvec4 col;mainImage(col,gl_FragCoord.xy);\ncol.rgb=hueShiftRGB(col.rgb,uHueShift);\nfloat scanline_val=sin(gl_FragCoord.y*uScanFreq)*0.5+0.5;\ncol.rgb*=1.-(scanline_val*scanline_val)*uScan;\ncol.rgb+=(rand(gl_FragCoord.xy+uTime)-0.5)*uNoise;\ngl_FragColor=vec4(clamp(col.rgb,0.0,1.0),1.0);\n}\n`;\n\ntype Props = {\n  hueShift?: number;\n  noiseIntensity?: number;\n  scanlineIntensity?: number;\n  speed?: number;\n  scanlineFrequency?: number;\n  warpAmount?: number;\n  resolutionScale?: number;\n};\n\nexport default function DarkVeil({\n  hueShift = 0,\n  noiseIntensity = 0,\n  scanlineIntensity = 0,\n  speed = 0.5,\n  scanlineFrequency = 0,\n  warpAmount = 0,\n  resolutionScale = 1\n}: Props) {\n  const ref = useRef<HTMLCanvasElement>(null);\n  const { animationsEnabled } = useAnimationContext();\n\n  useEffect(() => {\n    if (!animationsEnabled) return;\n    \n    const canvas = ref.current as HTMLCanvasElement;\n    const parent = canvas.parentElement as HTMLElement;\n\n    const renderer = new Renderer({\n      dpr: Math.min(window.devicePixelRatio, 2),\n      canvas\n    });\n\n    const gl = renderer.gl;\n    const geometry = new Triangle(gl);\n\n    const program = new Program(gl, {\n      vertex,\n      fragment,\n      uniforms: {\n        uTime: { value: 0 },\n        uResolution: { value: new Vec2() },\n        uHueShift: { value: hueShift },\n        uNoise: { value: noiseIntensity },\n        uScan: { value: scanlineIntensity },\n        uScanFreq: { value: scanlineFrequency },\n        uWarp: { value: warpAmount }\n      }\n    });\n\n    const mesh = new Mesh(gl, { geometry, program });\n\n    const resize = () => {\n      const w = parent.clientWidth,\n        h = parent.clientHeight;\n      renderer.setSize(w * resolutionScale, h * resolutionScale);\n      program.uniforms.uResolution.value.set(w, h);\n    };\n\n    window.addEventListener('resize', resize);\n    resize();\n\n    const start = performance.now();\n    let frame = 0;\n\n    const loop = () => {\n      program.uniforms.uTime.value = ((performance.now() - start) / 1000) * speed;\n      program.uniforms.uHueShift.value = hueShift;\n      program.uniforms.uNoise.value = noiseIntensity;\n      program.uniforms.uScan.value = scanlineIntensity;\n      program.uniforms.uScanFreq.value = scanlineFrequency;\n      program.uniforms.uWarp.value = warpAmount;\n\n      renderer.render({ scene: mesh });\n      frame = requestAnimationFrame(loop);\n    };\n\n    loop();\n\n    return () => {\n      cancelAnimationFrame(frame);\n      window.removeEventListener('resize', resize);\n      renderer.dpr = 0;\n      gl.canvas.width = 1;\n      gl.canvas.height = 1;\n    };\n  }, [animationsEnabled, hueShift, noiseIntensity, scanlineIntensity, speed, scanlineFrequency, warpAmount, resolutionScale]);\n\n  return (\n    <canvas\n      ref={ref}\n      className=\"fixed inset-0 w-full h-full pointer-events-none\"\n      style={{ zIndex: -1 }}\n    />\n  );\n}","size_bytes":11966},"client/src/components/ScrollStack.tsx":{"content":"import React, { ReactNode, useLayoutEffect, useRef, useCallback } from 'react';\nimport Lenis from 'lenis';\n\nexport interface ScrollStackItemProps {\n  itemClassName?: string;\n  children: ReactNode;\n}\n\nexport const ScrollStackItem: React.FC<ScrollStackItemProps> = ({ children, itemClassName = '' }) => (\n  <div\n    className={`scroll-stack-card relative w-full h-80 my-8 p-12 rounded-[40px] shadow-[0_0_30px_rgba(0,0,0,0.1)] box-border origin-top will-change-transform ${itemClassName}`.trim()}\n    style={{\n      backfaceVisibility: 'hidden',\n      transformStyle: 'preserve-3d'\n    }}\n  >\n    {children}\n  </div>\n);\n\ninterface ScrollStackProps {\n  className?: string;\n  children: ReactNode;\n  itemDistance?: number;\n  itemScale?: number;\n  itemStackDistance?: number;\n  stackPosition?: string;\n  scaleEndPosition?: string;\n  baseScale?: number;\n  scaleDuration?: number;\n  rotationAmount?: number;\n  blurAmount?: number;\n  useWindowScroll?: boolean;\n  onStackComplete?: () => void;\n}\n\nconst ScrollStack: React.FC<ScrollStackProps> = ({\n  children,\n  className = '',\n  itemDistance = 100,\n  itemScale = 0.03,\n  itemStackDistance = 30,\n  stackPosition = '20%',\n  scaleEndPosition = '10%',\n  baseScale = 0.85,\n  scaleDuration = 0.5,\n  rotationAmount = 0,\n  blurAmount = 0,\n  useWindowScroll = false,\n  onStackComplete\n  }) => {\n  const scrollerRef = useRef<HTMLDivElement>(null);\n  const stackCompletedRef = useRef(false);\n  const lenisRafRef = useRef<number | null>(null);\n  const updateRafRef = useRef<number | null>(null);\n  const lenisRef = useRef<Lenis | null>(null);\n  const cardsRef = useRef<HTMLElement[]>([]);\n  const lastTransformsRef = useRef(new Map<number, any>());\n  const isUpdatingRef = useRef(false);\n\n  const calculateProgress = useCallback((scrollTop: number, start: number, end: number) => {\n    if (scrollTop < start) return 0;\n    if (scrollTop > end) return 1;\n    return (scrollTop - start) / (end - start);\n  }, []);\n\n  const parsePercentage = useCallback((value: string | number, containerHeight: number) => {\n    if (typeof value === 'string' && value.includes('%')) {\n      return (parseFloat(value) / 100) * containerHeight;\n    }\n    return parseFloat(value as string);\n  }, []);\n\n  const getScrollData = useCallback(() => {\n    if (useWindowScroll) {\n      return {\n        scrollTop: window.scrollY,\n        containerHeight: window.innerHeight,\n        scrollContainer: document.documentElement\n      };\n    } else {\n      const scroller = scrollerRef.current;\n      return {\n        scrollTop: scroller ? scroller.scrollTop : 0,\n        containerHeight: scroller ? scroller.clientHeight : 0,\n        scrollContainer: scroller\n      };\n    }\n  }, [useWindowScroll]);\n\n  const getElementOffset = useCallback(\n    (element: HTMLElement) => {\n      if (useWindowScroll) {\n        const rect = element.getBoundingClientRect();\n        return rect.top + window.scrollY;\n      } else {\n        return element.offsetTop;\n      }\n    },\n    [useWindowScroll]\n  );\n\n  const updateCardTransforms = useCallback(() => {\n    if (!cardsRef.current.length || isUpdatingRef.current) return;\n\n    isUpdatingRef.current = true;\n\n    const { scrollTop, containerHeight, scrollContainer } = getScrollData();\n    const stackPositionPx = parsePercentage(stackPosition, containerHeight);\n    const scaleEndPositionPx = parsePercentage(scaleEndPosition, containerHeight);\n\n    const endElement = useWindowScroll\n      ? (document.querySelector('.scroll-stack-end') as HTMLElement | null)\n      : (scrollerRef.current?.querySelector('.scroll-stack-end') as HTMLElement | null);\n\n    const endElementTop = endElement ? getElementOffset(endElement) : 0;\n\n    cardsRef.current.forEach((card, i) => {\n      if (!card) return;\n\n      const cardTop = getElementOffset(card);\n      const triggerStart = cardTop - stackPositionPx - itemStackDistance * i;\n      const triggerEnd = cardTop - scaleEndPositionPx;\n      const pinStart = cardTop - stackPositionPx - itemStackDistance * i;\n      const pinEnd = endElementTop - containerHeight / 2;\n\n      const scaleProgress = calculateProgress(scrollTop, triggerStart, triggerEnd);\n      const targetScale = baseScale + i * itemScale;\n      const scale = 1 - scaleProgress * (1 - targetScale);\n      const rotation = rotationAmount ? i * rotationAmount * scaleProgress : 0;\n\n      let translateY = 0;\n      if (scrollTop >= pinStart && scrollTop <= pinEnd) {\n        translateY = stackPositionPx + itemStackDistance * i - cardTop + scrollTop;\n      } else if (scrollTop > pinEnd) {\n        translateY = stackPositionPx + itemStackDistance * i - cardTop + pinEnd;\n      }\n\n      const blur = blurAmount ? i * blurAmount * scaleProgress : 0;\n\n      const newTransform = {\n        translateY: Math.round(translateY * 100) / 100,\n        scale: Math.round(scale * 1000) / 1000,\n        rotation: Math.round(rotation * 100) / 100,\n        blur: Math.round(blur * 100) / 100\n      };\n\n      const lastTransform = lastTransformsRef.current.get(i);\n      const hasChanged =\n        !lastTransform ||\n        Math.abs(lastTransform.translateY - newTransform.translateY) > 0.1 ||\n        Math.abs(lastTransform.scale - newTransform.scale) > 0.001 ||\n        Math.abs(lastTransform.rotation - newTransform.rotation) > 0.1 ||\n        Math.abs(lastTransform.blur - newTransform.blur) > 0.1;\n\n      if (hasChanged) {\n        const transform = `translate3d(0, ${newTransform.translateY}px, 0) scale(${newTransform.scale}) rotate(${newTransform.rotation}deg)`;\n        const filter = newTransform.blur > 0 ? `blur(${newTransform.blur}px)` : '';\n\n        card.style.transform = transform;\n        card.style.filter = filter;\n\n        lastTransformsRef.current.set(i, newTransform);\n      }\n\n      if (i === cardsRef.current.length - 1) {\n        const isInView = scrollTop >= pinStart && scrollTop <= pinEnd;\n        if (isInView && !stackCompletedRef.current) {\n          stackCompletedRef.current = true;\n          onStackComplete?.();\n        } else if (!isInView && stackCompletedRef.current) {\n          stackCompletedRef.current = false;\n        }\n      }\n    });\n\n    isUpdatingRef.current = false;\n  }, [calculateProgress, parsePercentage, getScrollData, getElementOffset, stackPosition, scaleEndPosition, itemStackDistance, baseScale, itemScale, rotationAmount, blurAmount, useWindowScroll, onStackComplete]);\n\n  const handleScroll = useCallback(() => {\n    if (updateRafRef.current) return;\n    updateRafRef.current = requestAnimationFrame(() => {\n      updateCardTransforms();\n      updateRafRef.current = null;\n    });\n  }, [updateCardTransforms]);\n\n  const setupLenis = useCallback(() => {\n    if (useWindowScroll) {\n      const lenis = new Lenis({\n        duration: 1.2,\n        easing: t => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\n        smoothWheel: true,\n        touchMultiplier: 2,\n        infinite: false,\n        gestureOrientation: 'vertical',\n        wheelMultiplier: 1,\n        lerp: 0.1,\n        syncTouch: true,\n        syncTouchLerp: 0.075\n      });\n\n      lenis.on('scroll', handleScroll);\n\n      const raf = (time: number) => {\n        lenis.raf(time);\n        lenisRafRef.current = requestAnimationFrame(raf);\n      };\n      lenisRafRef.current = requestAnimationFrame(raf);\n\n      lenisRef.current = lenis;\n      return lenis;\n    } else {\n      const scroller = scrollerRef.current;\n      if (!scroller) return;\n\n      const lenis = new Lenis({\n        wrapper: scroller,\n        content: scroller.querySelector('.scroll-stack-inner') as HTMLElement,\n        duration: 1.2,\n        easing: t => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\n        smoothWheel: true,\n        touchMultiplier: 2,\n        infinite: false,\n        gestureOrientation: 'vertical',\n        wheelMultiplier: 1,\n        lerp: 0.1,\n        syncTouch: true,\n        syncTouchLerp: 0.075\n      });\n\n      lenis.on('scroll', handleScroll);\n\n      const raf = (time: number) => {\n        lenis.raf(time);\n        lenisRafRef.current = requestAnimationFrame(raf);\n      };\n      lenisRafRef.current = requestAnimationFrame(raf);\n\n      lenisRef.current = lenis;\n      return lenis;\n    }\n  }, [handleScroll, useWindowScroll]);\n\n  useLayoutEffect(() => {\n    if (!useWindowScroll && !scrollerRef.current) return;\n\n    const cards = Array.from(\n      useWindowScroll\n        ? document.querySelectorAll('.scroll-stack-card')\n        : (scrollerRef.current?.querySelectorAll('.scroll-stack-card') ?? [])\n    ) as HTMLElement[];\n    cardsRef.current = cards;\n    const transformsCache = lastTransformsRef.current;\n\n    cards.forEach((card, i) => {\n      if (i < cards.length - 1) {\n        card.style.marginBottom = `${itemDistance}px`;\n      }\n      card.style.willChange = 'transform, filter';\n      card.style.transformOrigin = 'top center';\n      card.style.backfaceVisibility = 'hidden';\n      card.style.transform = 'translateZ(0)';\n      card.style.webkitTransform = 'translateZ(0)';\n      card.style.perspective = '1000px';\n      card.style.webkitPerspective = '1000px';\n    });\n\n    setupLenis();\n\n    updateCardTransforms();\n\n    return () => {\n      if (lenisRafRef.current) {\n        cancelAnimationFrame(lenisRafRef.current);\n      }\n      if (updateRafRef.current) {\n        cancelAnimationFrame(updateRafRef.current);\n      }\n      if (lenisRef.current) {\n        lenisRef.current.destroy();\n      }\n      stackCompletedRef.current = false;\n      cardsRef.current = [];\n      transformsCache.clear();\n      isUpdatingRef.current = false;\n    };\n  }, [\n    itemDistance,\n    itemScale,\n    itemStackDistance,\n    stackPosition,\n    scaleEndPosition,\n    baseScale,\n    scaleDuration,\n    rotationAmount,\n    blurAmount,\n    useWindowScroll,\n    onStackComplete,\n    setupLenis,\n    updateCardTransforms\n  ]);\n\n  return (\n    <div\n      className={`relative w-full h-full overflow-y-auto overflow-x-visible ${className}`.trim()}\n      ref={scrollerRef}\n      style={{\n        overscrollBehavior: 'contain',\n        WebkitOverflowScrolling: 'touch',\n        scrollBehavior: 'smooth',\n        WebkitTransform: 'translateZ(0)',\n        transform: 'translateZ(0)',\n        willChange: 'scroll-position'\n      }}\n    >\n      <div className=\"scroll-stack-inner pt-[5vh] px-4 pb-[10rem]\">\n        {children}\n        {/* Spacer so the last pin can release cleanly */}\n        <div className=\"scroll-stack-end w-full h-px\" />\n      </div>\n    </div>\n  );\n};\n\nexport default ScrollStack;","size_bytes":10414},"client/src/components/CoverSection.tsx":{"content":"interface CoverSectionProps {\n  imageUrl: string;\n  alt: string;\n  className?: string;\n}\n\nconst CoverSection = ({ imageUrl, alt, className = \"\" }: CoverSectionProps) => {\n  return (\n    <section className={`relative w-full h-auto md:h-screen overflow-hidden ${className}`}>\n      <div className=\"relative w-screen left-1/2 -translate-x-1/2 overflow-hidden h-auto md:h-screen\">\n        <img \n          src={imageUrl}\n          alt={alt}\n          className=\"w-screen h-auto md:h-screen object-contain\"\n          style={{\n            display: 'block',\n            objectPosition: 'center',\n            margin: 0,\n            padding: 0\n          }}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default CoverSection;","size_bytes":723},"client/public/fonts/fonts.css":{"content":"/* Boska Font */\n@font-face {\n  font-family: 'Boska';\n  src: url('./boska-200.woff2') format('woff2');\n  font-weight: 200;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Boska';\n  src: url('./boska-300.woff2') format('woff2');\n  font-weight: 300;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Boska';\n  src: url('./boska-500.woff2') format('woff2');\n  font-weight: 500;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Boska';\n  src: url('./boska-700.woff2') format('woff2');\n  font-weight: 700;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Boska';\n  src: url('./boska-800.woff2') format('woff2');\n  font-weight: 800;\n  font-style: normal;\n  font-display: swap;\n}\n\n/* Stardom Font */\n@font-face {\n  font-family: 'Stardom';\n  src: url('./stardom-400.woff2') format('woff2');\n  font-weight: 400;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Stardom';\n  src: url('./stardom-500.woff2') format('woff2');\n  font-weight: 500;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Stardom';\n  src: url('./stardom-600.woff2') format('woff2');\n  font-weight: 600;\n  font-style: normal;\n  font-display: swap;\n}\n\n/* Satoshi Font */\n@font-face {\n  font-family: 'Satoshi';\n  src: url('./satoshi-300.woff2') format('woff2');\n  font-weight: 300;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Satoshi';\n  src: url('./satoshi-400.woff2') format('woff2');\n  font-weight: 400;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Satoshi';\n  src: url('./satoshi-500.woff2') format('woff2');\n  font-weight: 500;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Satoshi';\n  src: url('./satoshi-600.woff2') format('woff2');\n  font-weight: 600;\n  font-style: normal;\n  font-display: swap;\n}\n\n@font-face {\n  font-family: 'Satoshi';\n  src: url('./satoshi-700.woff2') format('woff2');\n  font-weight: 700;\n  font-style: normal;\n  font-display: swap;\n}","size_bytes":2074},"client/src/components/MusicConsentPopup.tsx":{"content":"import { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Volume2, VolumeX } from 'lucide-react';\n\ninterface MusicConsentPopupProps {\n  onConsent: (consent: boolean) => void;\n}\n\nconst MusicConsentPopup = ({ onConsent }: MusicConsentPopupProps) => {\n  const [isVisible, setIsVisible] = useState(true);\n\n  const handleConsent = (consent: boolean) => {\n    setIsVisible(false);\n    onConsent(consent);\n  };\n\n  if (!isVisible) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 bg-black/50 backdrop-blur-sm flex items-center justify-center p-4\">\n      <div className=\"bg-card rounded-2xl p-8 max-w-md w-full mx-4 shadow-2xl border border-border\">\n        <div className=\"text-center space-y-6\">\n          <div className=\"flex justify-center\">\n            <div className=\"bg-gold/20 p-4 rounded-full\">\n              <Volume2 className=\"h-8 w-8 text-gold-foreground\" />\n            </div>\n          </div>\n          \n          <div className=\"space-y-3\">\n            <h2 className=\"text-2xl font-bold text-foreground font-display\">\n              Enhanced Experience\n            </h2>\n            <p className=\"text-foreground/80 leading-relaxed\">\n              We'd love to play some beautiful background music to enhance your experience while exploring our wedding invitation.\n            </p>\n          </div>\n\n          <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\n            <Button\n              onClick={() => handleConsent(true)}\n              className=\"flex-1 bg-gold hover:bg-gold/90 text-gold-foreground font-medium py-3 px-6 rounded-lg transition-all duration-300 hover:scale-105\"\n              data-testid=\"button-allow-music\"\n            >\n              <Volume2 className=\"h-4 w-4 mr-2\" />\n              Play Music\n            </Button>\n            <Button\n              onClick={() => handleConsent(false)}\n              variant=\"outline\"\n              className=\"flex-1 border-2 border-destructive/40 hover:border-destructive/60 text-destructive bg-destructive/10 hover:bg-destructive/20 font-medium py-3 px-6 rounded-lg transition-all duration-300\"\n              data-testid=\"button-skip-music\"\n            >\n              <VolumeX className=\"h-4 w-4 mr-2\" />\n              Continue Silently\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MusicConsentPopup;","size_bytes":2382},"client/src/components/MemorableMomentsSection.tsx":{"content":"import { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { Dialog, DialogContent, DialogTitle, DialogDescription } from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { FolderOpen, Folder } from 'lucide-react';\n\n// Import prenup photos\nimport prenupImage1 from '@assets/prenup-photo1_1758345906849.png';\nimport prenupImage2 from '@assets/prenup-photo_1758345906849.jpg';\nimport prenupImage3 from '@assets/prenup-photo2_1758345906850.jpg';\nimport prenupImage4 from '@assets/prenup-photo3_1758345906850.jpg';\nimport prenupImage5 from '@assets/prenup-photo4_1758345906852.jpg';\nimport prenupImage6 from '@assets/prenup-photo5_1758345906853.jpg';\nimport prenupImage7 from '@assets/prenup-photo6_1758345906853.jpg';\nimport prenupImage8 from '@assets/prenup-photo7_1758345906854.jpg';\n\nconst MemorableMomentsSection = () => {\n  const [isGalleryOpen, setIsGalleryOpen] = useState(false);\n  const [selectedImageIndex, setSelectedImageIndex] = useState(0);\n\n  const images = [\n    { src: prenupImage1, title: \"Our Beginning\", description: \"The moment it all started\" },\n    { src: prenupImage2, title: \"The Proposal\", description: \"She said yes!\" },\n    { src: prenupImage3, title: \"Growing Together\", description: \"Building our love story\" },\n    { src: prenupImage4, title: \"Adventures\", description: \"Creating memories together\" },\n    { src: prenupImage5, title: \"Happy Moments\", description: \"Sharing joy and laughter\" },\n    { src: prenupImage6, title: \"Perfect Day\", description: \"Every moment with you\" },\n    { src: prenupImage7, title: \"Love Story\", description: \"Writing our chapter\" },\n    { src: prenupImage8, title: \"Forever Memories\", description: \"Moments to treasure\" }\n  ];\n\n  const handleImageClick = (index: number) => {\n    setSelectedImageIndex(index);\n  };\n\n  const nextImage = () => {\n    setSelectedImageIndex((prev) => (prev + 1) % images.length);\n  };\n\n  const prevImage = () => {\n    setSelectedImageIndex((prev) => (prev - 1 + images.length) % images.length);\n  };\n\n  return (\n    <motion.section \n      id=\"prenup-photos\" \n      className=\"bg-primary py-20 px-4 relative overflow-hidden\"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 1, delay: 0.5 }}\n    >\n      {/* Background Elements */}\n      <div className=\"absolute inset-0 opacity-10\">\n        <div className=\"absolute top-0 left-0 w-96 h-96 border border-border rounded-full transform -translate-x-1/3 -translate-y-1/3\"></div>\n        <div className=\"absolute bottom-0 right-0 w-96 h-96 border border-border rounded-full transform translate-x-1/3 translate-y-1/3\"></div>\n      </div>\n\n      <div className=\"max-w-6xl mx-auto relative z-10\">\n        {/* Section Header */}\n        <motion.div \n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, ease: \"easeOut\", delay: 0.8 }}\n        >\n          <h2 className=\"text-5xl font-script italic font-black text-primary-foreground mb-8\" data-testid=\"text-prenup-photos-title\">\n            Prenup Photos\n          </h2>\n          <p className=\"text-xl font-script italic text-primary-foreground/80 max-w-2xl mx-auto leading-relaxed\">\n            Capturing our love story before we say 'I do'\n          </p>\n        </motion.div>\n\n        {/* Animated Folder Component with React Bits Style */}\n        <motion.div \n          className=\"flex flex-col items-center space-y-8\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, ease: \"easeOut\", delay: 1.1 }}\n        >\n          {/* Interactive Folder Display */}\n          <motion.div \n            className=\"relative group cursor-pointer\"\n            onClick={() => setIsGalleryOpen(true)}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            initial={{ rotateY: 0 }}\n            animate={{ rotateY: 0 }}\n            transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n          >\n            {/* Folder Background with Gradient */}\n            <motion.div\n              className=\"relative\"\n              whileHover={{ rotateY: 10, rotateX: 5 }}\n              transition={{ type: \"spring\", stiffness: 400, damping: 25 }}\n            >\n              <div className=\"absolute inset-0 bg-gradient-to-br from-primary/20 to-primary/40 rounded-lg blur-xl group-hover:blur-2xl transition-all duration-500\" />\n              \n              {/* Main Folder Icon */}\n              <motion.div\n                className=\"relative bg-gradient-to-br from-primary to-primary/80 p-8 rounded-2xl shadow-2xl group-hover:shadow-3xl transition-all duration-500\"\n                whileHover={{ \n                  background: \"linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--primary))/0.9 100%)\",\n                }}\n              >\n                <Folder \n                  className=\"w-24 h-24 text-white drop-shadow-lg\"\n                  data-testid=\"folder-prenup-photos\"\n                />\n                \n                {/* Floating Images Preview */}\n                <motion.div \n                  className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-500\"\n                  initial={{ scale: 0.8, y: 10 }}\n                  whileHover={{ scale: 1, y: 0 }}\n                >\n                  <div className=\"grid grid-cols-3 gap-1 p-4\">\n                    {images.slice(0, 6).map((image, index) => (\n                      <motion.div\n                        key={index}\n                        className=\"w-6 h-6 rounded-sm overflow-hidden shadow-md\"\n                        initial={{ opacity: 0, scale: 0.5, rotate: -10 }}\n                        animate={{ opacity: 1, scale: 1, rotate: 0 }}\n                        transition={{ delay: index * 0.1 }}\n                      >\n                        <img\n                          src={image.src}\n                          alt=\"\"\n                          className=\"w-full h-full object-cover\"\n                        />\n                      </motion.div>\n                    ))}\n                  </div>\n                </motion.div>\n              </motion.div>\n            </motion.div>\n\n            {/* Floating Count Badge */}\n            <motion.div \n              className=\"absolute -top-2 -right-2 bg-red-500 text-white text-xs font-bold w-8 h-8 rounded-full flex items-center justify-center shadow-lg\"\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ type: \"spring\", delay: 1.5 }}\n              whileHover={{ scale: 1.1 }}\n            >\n              {images.length}\n            </motion.div>\n\n            {/* Hover Tooltip */}\n            <motion.div \n              className=\"absolute -bottom-8 left-1/2 transform -translate-x-1/2 opacity-0 group-hover:opacity-100 transition-all duration-300\"\n              initial={{ y: 10 }}\n              whileHover={{ y: 0 }}\n            >\n              <div className=\"bg-black text-white px-4 py-2 rounded-lg text-sm whitespace-nowrap shadow-lg\">\n                Click to view all photos\n                <div className=\"absolute top-0 left-1/2 transform -translate-x-1/2 -translate-y-1 w-0 h-0 border-l-4 border-r-4 border-b-4 border-transparent border-b-black\"></div>\n              </div>\n            </motion.div>\n          </motion.div>\n\n          {/* Open Gallery Button */}\n          <Button\n            size=\"lg\"\n            className=\"hover:bg-primary-foreground/90 text-primary font-script text-lg px-8 py-6 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 bg-[#024b30]\"\n            onClick={() => setIsGalleryOpen(true)}\n            data-testid=\"button-open-gallery\"\n          >\n            <FolderOpen className=\"w-5 h-5 mr-2\" />\n            Open All Photos\n          </Button>\n        </motion.div>\n\n        {/* Gallery Modal */}\n        <Dialog open={isGalleryOpen} onOpenChange={setIsGalleryOpen}>\n          <DialogContent className=\"max-w-5xl w-full h-[80vh] flex flex-col p-0\">\n            <DialogTitle className=\"sr-only\">Prenup Photos Gallery</DialogTitle>\n            <DialogDescription className=\"sr-only\">Browse through our prenup photo collection capturing our love story</DialogDescription>\n            <div className=\"flex-1 relative bg-black/95 rounded-lg overflow-hidden\">\n              {/* Header */}\n              <div className=\"absolute top-0 left-0 right-0 z-10 bg-gradient-to-b from-black/50 to-transparent p-4\">\n                <div className=\"flex items-center justify-between text-white\">\n                  <h3 className=\"text-xl font-script\">Prenup Photos</h3>\n                  <span className=\"text-sm\">\n                    {selectedImageIndex + 1} of {images.length}\n                  </span>\n                </div>\n              </div>\n\n              {/* Main Image */}\n              <div className=\"w-full h-full flex items-center justify-center\">\n                <img\n                  src={images[selectedImageIndex].src}\n                  alt={images[selectedImageIndex].title}\n                  className=\"max-w-full max-h-full object-contain\"\n                  data-testid={`img-gallery-main-${selectedImageIndex}`}\n                />\n              </div>\n\n              {/* Navigation Buttons */}\n              <button\n                onClick={prevImage}\n                className=\"absolute left-4 top-1/2 transform -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-colors duration-200\"\n                data-testid=\"button-prev-image\"\n              >\n                ‚Üê\n              </button>\n              <button\n                onClick={nextImage}\n                className=\"absolute right-4 top-1/2 transform -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-colors duration-200\"\n                data-testid=\"button-next-image\"\n              >\n                ‚Üí\n              </button>\n\n              {/* Image Info */}\n              <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/50 to-transparent p-4\">\n                <div className=\"text-white text-center\">\n                  <h4 className=\"text-lg font-script mb-1\">{images[selectedImageIndex].title}</h4>\n                  <p className=\"text-sm opacity-80\">{images[selectedImageIndex].description}</p>\n                </div>\n              </div>\n            </div>\n\n            {/* Thumbnail Strip */}\n            <div className=\"p-4 bg-white dark:bg-gray-900\">\n              <div className=\"flex space-x-2 overflow-x-auto\">\n                {images.map((image, index) => (\n                  <button\n                    key={index}\n                    onClick={() => handleImageClick(index)}\n                    className={`flex-shrink-0 w-16 h-16 rounded overflow-hidden border-2 transition-all duration-200 ${\n                      selectedImageIndex === index \n                        ? 'border-primary shadow-lg' \n                        : 'border-gray-300 hover:border-gray-400'\n                    }`}\n                    data-testid={`img-thumbnail-${index}`}\n                  >\n                    <img\n                      src={image.src}\n                      alt={image.title}\n                      className=\"w-full h-full object-cover\"\n                    />\n                  </button>\n                ))}\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </div>\n    </motion.section>\n  );\n};\n\nexport default MemorableMomentsSection;","size_bytes":11644},"client/src/contexts/AnimationContext.tsx":{"content":"import { createContext, useContext } from 'react';\n\n// Animation Context\ninterface AnimationContextType {\n  animationsEnabled: boolean;\n}\n\nconst AnimationContext = createContext<AnimationContextType>({\n  animationsEnabled: false\n});\n\nexport const useAnimationContext = () => useContext(AnimationContext);\n\nexport { AnimationContext };","size_bytes":334},"client/src/components/BotanicalLayer.tsx":{"content":"import { motion } from 'framer-motion';\nimport { useAnimationContext } from '@/contexts/AnimationContext';\n\ninterface BotanicalLayerProps {\n  src: string;\n  alt: string;\n  srcSet?: string;\n  sizes?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  width?: number | string;\n  height?: number | string;\n  top?: string;\n  left?: string;\n  right?: string;\n  bottom?: string;\n  rotate?: number;\n  opacity?: number;\n  zIndex?: number;\n  variant?: 'idleFloat' | 'parallax' | 'static';\n  hideBelow?: 'sm' | 'md' | 'lg';\n  blend?: 'normal' | 'soft-light' | 'multiply';\n  ariaHidden?: boolean;\n  motionProps?: any;\n  delay?: number;\n  testId?: string;\n  fetchPriority?: 'high' | 'low' | 'auto';\n}\n\nconst BotanicalLayer = ({\n  src,\n  alt,\n  srcSet,\n  sizes,\n  className = '',\n  style = {},\n  width = 'auto',\n  height = 'auto',\n  top,\n  left,\n  right,\n  bottom,\n  rotate = 0,\n  opacity = 0.4,\n  zIndex = 1,\n  variant = 'static',\n  hideBelow,\n  blend = 'normal',\n  ariaHidden = true,\n  motionProps = {},\n  delay = 0,\n  testId,\n  fetchPriority = 'auto'\n}: BotanicalLayerProps) => {\n  const { animationsEnabled } = useAnimationContext();\n\n  const positionStyles: React.CSSProperties = {\n    position: 'absolute',\n    top,\n    left,\n    right,\n    bottom,\n    width,\n    height,\n    opacity,\n    zIndex,\n    pointerEvents: 'none',\n    transform: `rotate(${rotate}deg)`,\n    mixBlendMode: blend,\n    willChange: variant !== 'static' ? 'transform' : 'auto',\n    ...style\n  };\n\n  const hideClasses = hideBelow ? `hidden ${hideBelow}:block` : '';\n  const combinedClassName = `${className} ${hideClasses}`;\n\n  const getMotionVariants = () => {\n    switch (variant) {\n      case 'idleFloat':\n        return animationsEnabled ? {\n          initial: { y: 0, opacity: 0 },\n          animate: { \n            y: [-3, 3, -3], \n            opacity: opacity,\n            transition: {\n              y: { \n                duration: 6, \n                repeat: Infinity, \n                ease: \"easeInOut\",\n                delay: delay\n              },\n              opacity: { \n                duration: 0.8, \n                delay: delay\n              }\n            }\n          }\n        } : {\n          initial: { opacity: 0 },\n          animate: { opacity: opacity }\n        };\n      case 'parallax':\n        return animationsEnabled ? {\n          initial: { opacity: 0 },\n          animate: { \n            opacity: opacity,\n            transition: { duration: 0.8, delay: delay }\n          }\n        } : {\n          initial: { opacity: 0 },\n          animate: { opacity: opacity }\n        };\n      default:\n        return {\n          initial: { opacity: 0 },\n          animate: { \n            opacity: opacity,\n            transition: { duration: 0.8, delay: delay }\n          }\n        };\n    }\n  };\n\n  const variants = getMotionVariants();\n\n  return (\n    <motion.img\n      src={src}\n      alt={alt}\n      srcSet={srcSet}\n      sizes={sizes}\n      className={combinedClassName}\n      style={positionStyles}\n      aria-hidden={ariaHidden}\n      role={ariaHidden ? \"presentation\" : undefined}\n      loading=\"lazy\"\n      decoding=\"async\"\n      draggable={false}\n      fetchpriority={fetchPriority}\n      initial={variants.initial}\n      animate={variants.animate}\n      data-testid={testId || `botanical-${alt.toLowerCase().replace(/\\s+/g, '-')}`}\n      {...motionProps}\n    />\n  );\n};\n\nexport default BotanicalLayer;","size_bytes":3403}},"version":1}